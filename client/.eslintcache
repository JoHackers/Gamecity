[{"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\index.js":"3","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\actions\\index.js":"4","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\games\\GameList.js":"5","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\Profile.js":"6","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\games\\GameAdd.js":"7","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\games\\GameInfo.js":"8","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\games\\GameEdit.js":"9","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\gamesReducer.js":"10","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\gameReducer.js":"11","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\profileReducer.js":"12","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\firebase\\index.js":"13","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\setToken.js":"14","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\login.js":"15","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\SearchForm.js":"16","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\authReducer.js":"17","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\Land.js":"18","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\register.js":"19","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\likeButton.js":"20"},{"size":1079,"mtime":1608648934274,"results":"21","hashOfConfig":"22"},{"size":2946,"mtime":1608648934192,"results":"23","hashOfConfig":"22"},{"size":561,"mtime":1608648934281,"results":"24","hashOfConfig":"22"},{"size":4844,"mtime":1608725236166,"results":"25","hashOfConfig":"22"},{"size":2484,"mtime":1608769631452,"results":"26","hashOfConfig":"22"},{"size":1070,"mtime":1608648934223,"results":"27","hashOfConfig":"22"},{"size":11371,"mtime":1608726836773,"results":"28","hashOfConfig":"22"},{"size":2451,"mtime":1608715318394,"results":"29","hashOfConfig":"22"},{"size":5009,"mtime":1608648934221,"results":"30","hashOfConfig":"22"},{"size":1384,"mtime":1608769449572,"results":"31","hashOfConfig":"22"},{"size":513,"mtime":1608452259700,"results":"32","hashOfConfig":"22"},{"size":698,"mtime":1608648934309,"results":"33","hashOfConfig":"22"},{"size":600,"mtime":1608648999187,"results":"34","hashOfConfig":"22"},{"size":204,"mtime":1608648934266,"results":"35","hashOfConfig":"22"},{"size":1430,"mtime":1608648934261,"results":"36","hashOfConfig":"22"},{"size":564,"mtime":1608648934228,"results":"37","hashOfConfig":"22"},{"size":1267,"mtime":1608648934276,"results":"38","hashOfConfig":"22"},{"size":205,"mtime":1608648934198,"results":"39","hashOfConfig":"22"},{"size":2998,"mtime":1608648934264,"results":"40","hashOfConfig":"22"},{"size":612,"mtime":1608729506536,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"yc2nks",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\index.js",[],["89","90"],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\App.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\index.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\actions\\index.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\games\\GameList.js",["91","92","93","94","95"],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\Profile.js",["96"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchUser } from '../../actions/index'\r\n\r\nfunction Profile ({ userData, fetchUser }) {\r\n  useEffect(() => {\r\n    fetchUser()\r\n  }, [])\r\n  return userData.loading ? (\r\n    <h2>Loading</h2>\r\n  ) : userData.error ? (\r\n    <h2>{userData.error}</h2>\r\n  ) : (\r\n    <div>\r\n      <h2>Users List</h2>\r\n      <div>\r\n        {userData &&\r\n          userData.user &&\r\n          userData.user.map(userInfo => <p>{userInfo.name}</p>)}\r\n          <button>Edit</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userData: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchUser: () => dispatch(fetchUser())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile)\r\n\r\n","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\games\\GameAdd.js",["97","98"],"// Import useState which will allow us to add state to a functional component.\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { post } from \"axios\";\r\n// import FileBase from \"react-file-base64\";\r\n//Import the addGame function from the Actions file.\r\nimport { addGame } from \"../../actions\";\r\nimport { set } from \"mongoose\";\r\n//Import the storage from firebase file\r\nimport {storage} from \"../../firebase\";\r\nimport UploadImage from \"../../UploadImage.jpg\"\r\n\r\nfunction GameAdd(props) {\r\n  \r\n  const initialState = {\r\n    gameName: \"\",\r\n    gameType: \"Select Game\",\r\n    gameDuration: \"\",\r\n    gameDate: \"\",\r\n    gameGovernorate: \"Select Governorate\",\r\n    // selectedFile: \"\"\r\n    // imageData: {\r\n    image: null,\r\n    url: \"\",\r\n    // progress: 0,\r\n    error: \"\"\r\n    // // }\r\n  };\r\n\r\n  // const [image, setImage] = useState(null);\r\n  // const [url, setUrl] = useState(\"\");\r\n  // const [progress, setProgress] = useState(0);\r\n  // const [error, setError] = useState(\"\");\r\n\r\n  //useState: UseState is a two element array that contains the current state as the\r\n  //first element and a function to update it as the second. Here we're assigning the\r\n  //(const) variable \"game\" to the current state value, and \"setFields\" to the update function.\r\n  const [game, setFields] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n\r\n  //Every time a user types a character in a form input field the onChange property calls the handleChange\r\n  //handler function passing the event object as an implicit argument. The event object includes the target\r\n  //(i.e., the form field element) which has attributes for field name and value.\r\n  function handleChangeName(event) {\r\n    // ...game spread operator so that the new character is added to the existing article value, otherwise it will just overwrite it.\r\n    setFields({ ...game, gameName: event.target.value });\r\n  }\r\n\r\n  function handleChangeType(event) {\r\n    setFields({ ...game, gameType: event.target.value });\r\n  }\r\n\r\n  function handleChangeGovernorate(event) {\r\n    setFields({ ...game, gameGovernorate: event.target.value });\r\n  }\r\n\r\n  function handleChangeDate(event) {\r\n    setFields({ ...game, gameDate: event.target.value });\r\n  }\r\n\r\n  function handleChangeDuration(event) {\r\n    setFields({ ...game, gameDuration: event.target.value });\r\n  }\r\n\r\n\r\n  function handleChangeImage(event) {\r\n    const file = event.target.files[0];\r\n    \r\n      if (file) {\r\n        //Check file type\r\n        const fileType = file[\"type\"];\r\n        const validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\r\n        console.log(file);\r\n        if (validImageTypes.includes(fileType)) {\r\n          setFields({ ...game, error: \"\"});\r\n          setFields({ ...game, image: file });\r\n          \r\n        }else {\r\n        setFields({ ...game, error: \"Please select an image to upload\"})\r\n      } \r\n      }\r\n  }\r\n\r\n  function HandleUpload(event) {\r\n    console.log(game.image)\r\n    useEffect(() => {\r\n      if(game.image) {\r\n      //Images is the folder in firebase that contains the images\r\n      const uploadTask = storage.ref(`images/${game.image.name}`).put(game.image);\r\n      console.log(game.image.name)\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        // snapshot => {\r\n        //     const progress = Math.round(\r\n        //       (snapshot.bytesTransferred / snapshot.totalBytes)\r\n        //     )\r\n        //     setFields({ ...game, progress: progress})\r\n        // },\r\n        error => {\r\n          setFields({ ...game, error : error })\r\n        },\r\n\r\n        // useEffect(\r\n          () => {\r\n          console.log(game.image.name)\r\n          storage.ref(\"images\").child(game.image.name).getDownloadURL().then(url => {\r\n            setFields({ ...game, url : url })\r\n            // setFields({ ...game, progress: 0})\r\n          });\r\n        })\r\n      // );\r\n    } else {\r\n      setFields({...game, error: \"Error, please choose an image to upload\"})\r\n    }\r\n  });\r\n  }\r\n\r\n  // function handleChangeImage(event) {\r\n  //   const file = event.target.files[0];\r\n  //     if (file) {\r\n  //       //Check file type\r\n  //       const fileType = file[\"type\"];\r\n  //       const validImageTypes = [\"image/gif\", \"image/jpeg\", \"image/png\"];\r\n  //       if (validImageTypes.includes(fileType)) {\r\n  //         setError(\"\");\r\n  //         setImage(file);\r\n  //         // console.log(file);\r\n  //       }else {\r\n  //       setError(\"Please select an image to upload\")\r\n  //     } \r\n  //     }\r\n  // }\r\n\r\n  // function HandleUpload(event) {\r\n  //   if(image) {\r\n  //     //Images is the folder in firebase that contains the images\r\n  //     const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n  //     uploadTask.on(\r\n  //       \"state_changed\",\r\n  //       snapshot => {\r\n  //           const progress = Math.round(\r\n  //             (snapshot.bytesTransferred / snapshot.totalBytes)\r\n  //           )\r\n  //           setProgress(progress)\r\n  //       },\r\n  //       error => {\r\n  //         setError(error)\r\n  //       },\r\n  //       () => {\r\n  //         storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\r\n  //           setUrl(url)\r\n  //           setProgress(0);\r\n  //         });\r\n  //       }\r\n  //     );\r\n  //   } else {\r\n  //     setError(\"Error, please choose an image to upload\")\r\n  //   }\r\n  // }\r\n\r\n  //When the user presses the submit button it calls the handleSubmit function. This is where our API post\r\n  //request is sent with the game object sent as the payload. If it successfully posts it will send back\r\n  //the new game object. Then we dispatch the addGame action passing in the new game object.\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    // if (!game.gameName || !game.gameType || !game.gameDate || !game.gameDuration || !game.gameGovernorate) return;\r\n    post(\"/api/games\", {\r\n      gameName: game.gameName,\r\n      gameType: game.gameType,\r\n      gameDate: game.gameDate,\r\n      gameDuration: game.gameDuration,\r\n      gameGovernorate: game.gameGovernorate,\r\n    })\r\n      .then(function (response) {\r\n        dispatch(addGame(response.data));\r\n      })\r\n      .then(function () {\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  function handleCancel() {\r\n    props.history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h4>What's your next game?..</h4>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Post</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={game.gameName}\r\n            onChange={handleChangeName}\r\n            className=\"form-control\"\r\n            placeholder=\"Type in your post here...\"\r\n          />\r\n        </div>\r\n\r\n        {/* LOCATION- Drop DOWN MENU */}\r\n        <div className=\"form-group\">\r\n          <label>Governorate</label>\r\n          <select\r\n            type=\"text\"\r\n            required\r\n            value={game.gameGovernorate}\r\n            onChange={handleChangeGovernorate}\r\n            className=\"form-control\"\r\n            placeholder=\"Select Governorate\"\r\n          >\r\n            <option value=\"SelectGovernorate\">Select Governorate</option>\r\n            <option value=\"Amman\"> Amman</option>\r\n            <option value=\"Jerash\"> Jerash</option>\r\n            <option value=\"Irbid\"> Irbid</option>\r\n            <option value=\"Balqa\"> Balqa</option>\r\n            <option value=\"Zarqa\"> Zarqa</option>\r\n            <option value=\"Madaba\"> Madaba</option>\r\n            <option value=\"Mafraq\"> Mafraq</option>\r\n            <option value=\"Ajloun\"> Ajloun</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* SELECT GAME- DROPDOWN */}\r\n        <div className=\"form-group\">\r\n          <label>Game</label>\r\n          <select\r\n            type=\"text\"\r\n            required\r\n            value={game.gameType}\r\n            onChange={handleChangeType}\r\n            className=\"form-control\"\r\n            placeholder=\"Select Game\"\r\n          >\r\n            <option value=\"SelectGame\"> Select Game</option>\r\n            <option value=\"Paintball\"> Paintball</option>\r\n            <option value=\"Football\"> Football</option>\r\n            <option value=\"Karting\"> Karting</option>\r\n            <option value=\"Basketball\"> Basketball</option>\r\n            <option value=\"Laser Tag\"> Laser Tag</option>\r\n            <option value=\"Volleyball\"> Volleyball</option>\r\n            <option value=\"Rock Climbing\"> Rock Climbing</option>\r\n            <option value=\"Horseback Riding\"> Horseback Riding</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* DATE- CALENDAR DATE */}\r\n        <div className=\"form-group\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            required\r\n            value={game.gameDate}\r\n            onChange={handleChangeDate}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        {/* DURATION- SET TIME */}\r\n        <div className=\"form-group\">\r\n          <label>Game Duration</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            value={game.gameDuration}\r\n            onChange={handleChangeDuration}\r\n            className=\"form-control\"\r\n            placeholder=\"Set game's duration\"\r\n          />\r\n        </div>\r\n\r\n        {/* IMAGE- Upload Image */}\r\n        <div className = \"form-group\">\r\n        <label>Upload Image</label>\r\n        <br/> \r\n          {/* <FileBase\r\n            type = \"file\" \r\n            multiple = {false} \r\n            onDone = {({base64}) => setFields({...game, selectedFile: base64})}\r\n          />\r\n        </div> */}\r\n         {/* <div>\r\n           <input\r\n             type = \"file\"\r\n             onChange = {handleChangeImage}\r\n            /> {\" \"}\r\n            <button onClick = {HandleUpload}>Upload</button>\r\n          </div>\r\n          <div>\r\n            {progress > 0? <progress value = {progress} max = \"100\"/> : \"\"}\r\n           <p> {error} </p>\r\n          </div>\r\n          {url ? (\r\n            <img src = {url} alt = \"image\" width = \"250px\" height = \"125px\" />\r\n          ) : (\r\n            <img src = {UploadImage} alt = \"UploadImage\" width = \"250px\" height = \"125px\"/>\r\n          )} \r\n        </div> */}\r\n\r\n        <div>\r\n           <input\r\n             type = \"file\"\r\n             onChange = {handleChangeImage}\r\n            /> {\" \"}\r\n            <button onClick = {HandleUpload}>Upload</button>\r\n          </div>\r\n          <div>\r\n            {/* {game.progress > 0? <game.progress value = {game.progress} max = \"100\"/> : \"\"} */}\r\n           <p> {game.error} </p>\r\n          </div>\r\n          {game.url ? (\r\n            <img src = {game.url} alt = \"image\" />\r\n          ) : (\r\n            <img src = {UploadImage} alt = \"UploadImage\" />\r\n          )} \r\n        </div>\r\n\r\n        <div className=\"btn-group\">\r\n          <button type=\"submit\" value=\"Post\" className=\"btn btn-primary\">\r\n            {\" \"}\r\n            Submit{\" \"}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleCancel}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            {\" \"}\r\n            Cancel{\" \"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameAdd;\r\n\r\n//NOTE: we'll use the useDispatch hook to modify the Redux store.\r\n","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\games\\GameInfo.js",["99"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setGame, removeGame } from \"../../actions\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\n//this component dispatches two different actions, setGame and removeGame\r\n\r\n//Pass in props as a parameter because we will be accessing the game id in the component from the params prop.\r\nfunction GameInfo(props) {\r\n  //Call the react-redux useSelector hook to get the game object from the Redux store and assign it to the component's state.\r\n  const game = useSelector((state) => state.game);\r\n  const dispatch = useDispatch();\r\n\r\n  //The useEffect hook takes a second argument called the dependency array that instructs React to rerun the effect only when the listed elements in the array change. React will post a warning in the console if you leave something out.\r\n  useEffect(\r\n    function () {\r\n      axios\r\n        .get(`/api/games/${props.match.params._id}`)\r\n        .then(function (response) {\r\n          dispatch(setGame(response.data));\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"error\", error);\r\n        });\r\n    },\r\n    [dispatch, props]\r\n  );\r\n\r\n  function handleDelete() {\r\n    axios\r\n      .delete(`/api/games/${game._id}`)\r\n      .then(function () {\r\n        dispatch(removeGame(game._id));\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"error\", error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{game.gameName}</h2>\r\n      <h6>{game.gameDate}</h6>\r\n      <h6>{game.gameDuration}</h6>\r\n      <h6>{game.gameGovernorate}</h6>\r\n      <h6>{game.gameType}</h6>\r\n      {/* <img>{game.selectedFile}</img> */}\r\n      \r\n      <div className=\"btn-group\">\r\n        <Link\r\n          to={{ pathname: `/games/${game._id}/edit` }}\r\n          className=\"btn btn-info\"\r\n        >\r\n          Edit\r\n        </Link>\r\n        <button className=\"btn btn-danger\" type=\"button\" onClick={handleDelete}>\r\n          Delete\r\n        </button>\r\n        <Link to=\"/\" className=\"btn btn-secondary\">\r\n          Close\r\n        </Link>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameInfo;\r\n//useEffect: The React useEffect hook essentially replaces the lifecycle methods (componentDidMount, componentDidUpdate, componentWillUnmount). Use it when we need to rerender our component.\r\n","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\games\\GameEdit.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\gamesReducer.js",["100"],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\gameReducer.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\profileReducer.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\firebase\\index.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\setToken.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\login.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\SearchForm.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\reducers\\authReducer.js",["101"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE,\r\n    AUTH_ERROR\r\n} from '../actions/index'\r\n\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isLoggedIn: false,\r\n    errors: {}\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token)\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.getItem('token')\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true\r\n            }\r\n        case LOGIN_FAILURE:\r\n        case REGISTER_FAILURE:\r\n        case AUTH_ERROR:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                error: payload\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\Land.js",["102"],"import React, { Component } from \"react\";\r\nimport Register from \"./pages/register\"\r\nconst Land= ()=>{\r\n    return(\r\n        <div>\r\n            <Register />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Land;","C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\pages\\register.js",[],"C:\\Users\\USER\\Desktop\\Thesis\\Gamecity Thesis\\Gamecity\\client\\src\\components\\likeButton.js",["103"],"import React, { Component } from 'react';\r\n\r\nexport default class LikeButton extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { like: 0, join: 0 };\r\n    }\r\n    render() {\r\n      return (\r\n        <div className=\"App\">\r\n          <button\r\n            onClick={() => {\r\n            this.setState({ like: this.state.like + 1 });}}>Likes: {this.state.like}</button>\r\n          <button\r\n            onClick={() => {\r\n            this.setState({ join: this.state.join + 1 });\r\n            }}\r\n          >Join: {this.state.join}</button>\r\n        </div>\r\n      );\r\n    }\r\n  }",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":16},{"ruleId":"108","severity":1,"message":"112","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":13},{"ruleId":"108","severity":1,"message":"113","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"114","line":7,"column":18,"nodeType":"110","messageId":"111","endLine":7,"endColumn":22},{"ruleId":"108","severity":1,"message":"115","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":9},{"ruleId":"116","severity":1,"message":"117","line":8,"column":6,"nodeType":"118","endLine":8,"endColumn":8,"suggestions":"119"},{"ruleId":"108","severity":1,"message":"120","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":319,"column":13,"nodeType":"123","endLine":319,"endColumn":51},{"ruleId":"108","severity":1,"message":"124","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":16},{"ruleId":"108","severity":1,"message":"114","line":7,"column":3,"nodeType":"110","messageId":"111","endLine":7,"endColumn":7},{"ruleId":"125","severity":1,"message":"126","line":31,"column":9,"nodeType":"127","messageId":"128","endLine":36,"endColumn":14},{"ruleId":"108","severity":1,"message":"129","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"129","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'DELETE' is defined but never used.","'LIKE' is defined but never used.","'e' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array. If 'fetchUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["132"],"'set' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'FileBase' is defined but never used.","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [fetchUser]",{"range":"135","text":"136"},[221,223],"[fetchUser]"]