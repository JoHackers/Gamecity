[{"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\index.js":"3","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\actions\\index.js":"4","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\notfound.js":"5","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\ProfileEdit.js":"6","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\Land.js":"7","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Profile.js":"8","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Chat.js":"9","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\login.js":"10","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\setToken.js":"11","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\SearchForm.js":"12","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\register.js":"13","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameInfo.js":"14","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameAdd.js":"15","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameEdit.js":"16","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\ProtectedRoute.js":"17","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameList.js":"18","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\gamesReducer.js":"19","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\gameReducer.js":"20","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\chatReducer.js":"21","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\profileReducer.js":"22","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\authReducer.js":"23","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Profilegames.js":"24","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Filter.js":"25","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\firebase\\index.js":"26","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Header.js":"27","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Cards.js":"28","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\AboutUsCard.js":"29","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\hook\\useWindowPosition.js":"30","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\register2.js":"31","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Notifications.js":"32","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\joinRoomReducer.js":"33"},{"size":1266,"mtime":1609580835751,"results":"34","hashOfConfig":"35"},{"size":9707,"mtime":1609870968993,"results":"36","hashOfConfig":"35"},{"size":703,"mtime":1609869117425,"results":"37","hashOfConfig":"35"},{"size":8548,"mtime":1609869316937,"results":"38","hashOfConfig":"35"},{"size":537,"mtime":1609845627341,"results":"39","hashOfConfig":"35"},{"size":5352,"mtime":1609868547476,"results":"40","hashOfConfig":"35"},{"size":1950,"mtime":1609869023885,"results":"41","hashOfConfig":"35"},{"size":5328,"mtime":1609868016784,"results":"42","hashOfConfig":"35"},{"size":3480,"mtime":1609871280830,"results":"43","hashOfConfig":"35"},{"size":4195,"mtime":1609871468463,"results":"44","hashOfConfig":"35"},{"size":205,"mtime":1609868997410,"results":"45","hashOfConfig":"35"},{"size":845,"mtime":1609868984303,"results":"46","hashOfConfig":"35"},{"size":4428,"mtime":1609870895099,"results":"47","hashOfConfig":"35"},{"size":6309,"mtime":1609871261061,"results":"48","hashOfConfig":"35"},{"size":9044,"mtime":1609871257057,"results":"49","hashOfConfig":"35"},{"size":7871,"mtime":1609871259177,"results":"50","hashOfConfig":"35"},{"size":520,"mtime":1609868636646,"results":"51","hashOfConfig":"35"},{"size":20891,"mtime":1609871262577,"results":"52","hashOfConfig":"35"},{"size":2619,"mtime":1609869109701,"results":"53","hashOfConfig":"35"},{"size":521,"mtime":1609869093386,"results":"54","hashOfConfig":"35"},{"size":365,"mtime":1609869083208,"results":"55","hashOfConfig":"35"},{"size":1245,"mtime":1609869301094,"results":"56","hashOfConfig":"35"},{"size":1184,"mtime":1609869465604,"results":"57","hashOfConfig":"35"},{"size":8849,"mtime":1609871266194,"results":"58","hashOfConfig":"35"},{"size":2848,"mtime":1609580835722,"results":"59","hashOfConfig":"35"},{"size":528,"mtime":1609869330266,"results":"60","hashOfConfig":"35"},{"size":3125,"mtime":1609869366421,"results":"61","hashOfConfig":"35"},{"size":851,"mtime":1609871410524,"results":"62","hashOfConfig":"35"},{"size":2097,"mtime":1609871268829,"results":"63","hashOfConfig":"35"},{"size":724,"mtime":1609613183383,"results":"64","hashOfConfig":"35"},{"size":6996,"mtime":1609843233495,"results":"65","hashOfConfig":"35"},{"size":2877,"mtime":1609871264312,"results":"66","hashOfConfig":"35"},{"size":248,"mtime":1609869274466,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1kuskvn",{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\index.js",[],["142","143"],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\App.js",["144","145","146","147","148","149"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { AppBar, Collapse, IconButton, Toolbar, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { AccountCircle } from \"@material-ui/icons\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link as Scroll } from 'react-scroll';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ProtectedRoute from \"./components/pages/ProtectedRoute\";\r\nimport notfound from \"./components/pages/notfound\";\r\nimport Profile from \"./components/pages/Profile\";\r\nimport ProfileEdit from \"./components/pages/ProfileEdit\";\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\nimport GameList from \"./components/games/GameList\";\r\nimport GameInfo from \"./components/games/GameInfo\";\r\nimport GameAdd from \"./components/games/GameAdd\";\r\nimport GameEdit from \"./components/games/GameEdit\";\r\nimport Chat from \"./components/pages/Chat\";\r\nimport { loadUser } from \"./actions\";\r\nimport { setToken } from \"./components/pages/setToken\";\r\nimport { store } from \"./index\";\r\nimport Login from \"./components/pages/login\";\r\nimport SearchForm from \"./components/pages/SearchForm\";\r\nimport Register from \"./components/pages/register\";\r\nimport Header from \"./components/pages/Header\";\r\nimport Cards from \"./components/pages/Cards\";\r\n// import FooterPage from \"./Footer\"\r\nimport Land from \"./components/Land\";\r\nimport PrimarySearchAppBar from \"./components/pages/register2\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"100vh\",\r\n    minWidth: \"100vh\",\r\n    backgroundImage: `url(${process.env.PUBLIC_URL + './Images/game.1.jpg'})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    alignContent: \"center\",\r\n  },\r\n  rootNavBar: {\r\n      flexGrow: \"3\",\r\n      background: \"#070d13\",\r\n      fontFamily: \"Century Gothic\"\r\n  },\r\n  appBar: {\r\n      background: \"none\",\r\n      fontFamily: \"Century Gothic\"\r\n  },\r\n  appBarWrapper: {\r\n      width: \"80%\",\r\n      margin: \"0 auto\"\r\n  },\r\n  appBarLogo: {\r\n      flexGrow: \"1\",\r\n      fontSize: \"3rem\"\r\n\r\n  },\r\n  gamesityTitle: {\r\n      fontWeight: \"bold\",\r\n      fontSize: \"2.2rem\",\r\n      color: \"#9bd4d8\"       \r\n  },\r\n  icon: {\r\n      color: \"#fff\",\r\n      fontSize: \"2rem\"\r\n  },\r\n  body: {\r\n      color: \"#fff\",\r\n      fontFamily: \"Century Gothic\",\r\n      fontSize: \"2rem\"\r\n\r\n  },\r\n  container: {\r\n      textAlign: \"center\"\r\n  },\r\n  expandIcon: {\r\n      color: \"#fff\",\r\n      fontSize: \"2rem\",\r\n  }\r\n}));\r\n\r\nif (localStorage.getItem(\"token\")) {\r\n  setToken(localStorage.getItem(\"token\"));\r\n}\r\n\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n    \r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <div >\r\n      <Router>\r\n        <CssBaseline />\r\n          <Navigation />\r\n          <br/><br/>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nvar useremail = window.localStorage.email;\r\n\r\nfunction Navigation() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n      setChecked(true);\r\n  }, [])\r\n\r\n  var value = false;\r\n  if (window.localStorage.length > 0) {\r\n    value = true;\r\n  } else {\r\n    value = false;\r\n  }\r\n\r\n  return (\r\n  <div>\r\n      {value === false ? (\r\n        <div className = {classes.root} id = \"header\">\r\n        <AppBar position = \"static\" className = {classes.appBar} elevation = {0}>\r\n            <Toolbar className = {classes.appBarWrapper}>\r\n                <div>\r\n                <Link\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  to=\"/land\"\r\n                  style={{ color: \"white\" }}\r\n                >\r\n                <img\r\n                    className = {classes.appBarLogo}\r\n                    height=\"30px\"\r\n                    width=\"30px\"\r\n                    src={`${process.env.PUBLIC_URL}/Logo/GamecityLogo.png`}\r\n                    alt=\"Gamecity logo\"\r\n                    />\r\n                </Link>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Collapse in = {checked}  \r\n            {...(checked ? { timeout: 1000 } : {})}\r\n            collapsedHeight = {50}\r\n        >\r\n            <div className = {classes.container}>\r\n              <br /> <br /> <br /> <br /> <br /> <br /> \r\n              <br /> <br /> <br /> <br /> <br /> <br /> \r\n              <br /> <br /> <br /> \r\n              <br /> <br /> <br /> \r\n              <br />  \r\n                <Scroll to= \"aboutus-login-cards\" smooth = {true} >\r\n                    <IconButton>\r\n                        <ExpandMoreIcon className = {classes.expandIcon}/>\r\n                    </IconButton>\r\n                </Scroll>\r\n            </div>\r\n        </Collapse>\r\n        <div> \r\n          <br /> <br /> <br /> <br /> <br /> <br /> \r\n          <br /> <br /> <br />  \r\n    </div>\r\n        <Cards />\r\n        <Main />\r\n    </div>\r\n      ) : (\r\n        <div>\r\n        <AppBar \r\n          id = \"header\"\r\n          position = \"static\"\r\n          style = {{background: \"#070d13\"}} \r\n          elevation = {0}\r\n        >\r\n          <Toolbar>\r\n            <Link\r\n              exact\r\n              activeClassName=\"active\"\r\n              to=\"/games\"\r\n              style={{ color: \"white\", flexGrow: 1}}\r\n            >\r\n              <img\r\n                height=\"30px\"\r\n                width=\"30px\"\r\n                src={`${process.env.PUBLIC_URL}/Logo/GamecityLogo.png`}\r\n                alt=\"Gamecity logo\"\r\n              />\r\n              </Link>\r\n\r\n              <SearchForm />\r\n\r\n              <IconButton >\r\n                <Link\r\n                  color = \"inherit\"\r\n                  exact\r\n                  activeClassName=\"active\"\r\n                  to=\"/games\"\r\n                >\r\n                  <HomeIcon style = {{color: \"white\"}}/>\r\n                </Link>\r\n              </IconButton>\r\n\r\n              <IconButton>\r\n              <Link\r\n                exact\r\n                activeClassName=\"active\"\r\n                to=\"/chat\"\r\n              >\r\n                <CommentIcon style = {{color: \"white\"}}/>\r\n              </Link>\r\n              </IconButton>\r\n\r\n              <div>\r\n                <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" color = \"inherit\" onClick={handleClick} >\r\n                  <AccountCircle/>\r\n                </IconButton>\r\n                <Menu\r\n                  id=\"simple-menu\"\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose}\r\n                >\r\n                  <MenuItem onClick={handleClose}>\r\n                    <Link\r\n                      exact\r\n                      activeClassName=\"active\"\r\n                      to={\"/profile/\" + useremail}\r\n                    >\r\n                      <Button style = {{color: \"#070d13\"}}>\r\n                        Profile\r\n                      </Button>\r\n                     </Link>                   \r\n                  </MenuItem>\r\n                  <hr/>\r\n                  <MenuItem>\r\n                    <Link\r\n                      exact\r\n                      activeClassName=\"active\"\r\n                      to=\"/land\"\r\n                      onClick={() => logout()}\r\n                    >\r\n                      <Button style ={{color: \"#070d13\"}}>\r\n                        Logout\r\n                      </Button>\r\n                    </Link>                 \r\n                  </MenuItem>\r\n                </Menu>\r\n              </div>\r\n          </Toolbar>\r\n          </AppBar>\r\n          <div>\r\n          <Main />\r\n          </div>\r\n          </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Main() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/land\" component={Header} />\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/games\"\r\n        component={GameList}\r\n        isAuth={localStorage.length > 0}\r\n      />\r\n\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/\"\r\n        component={GameList}\r\n        isAuth={localStorage.length > 0}\r\n      />\r\n      <Route exact path=\"/games/new\" component={GameAdd} />\r\n      <Route exact path=\"/games/:_id\" component={GameInfo} />\r\n      <Route exact path=\"/games/:_id/edit\" component={GameEdit} />\r\n      <Route exact path=\"/chat\" component={Chat} />\r\n      <Route exact path=\"/editProfile/:email\" component={ProfileEdit} />\r\n      <Route\r\n        exact\r\n        path=\"/addUser\"\r\n        render={(props) => <Register {...props} />}\r\n      />\r\n      <Route exact path=\"/profile/:email\" render={(props) => <Profile {...props} />} />\r\n      <Route\r\n        exact\r\n        path=\"/profile/:email\"\r\n        render={(props) => <Profile {...props} />}\r\n      />\r\n      <Route exact path=\"/login\" render={(props) => <Login {...props} />} />\r\n      <Route\r\n        exact\r\n        path=\"/addUser\"\r\n        render={(props) => <Register {...props} />}\r\n      />\r\n      <Route exact path=\"/notfound\" component={notfound} />\r\n      {/* <Route exact path=\"/notifications\" component={Notifications} /> */}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nfunction logout() {\r\n  window.localStorage.clear();\r\n  window.location = \"/land\";\r\n}\r\nexport default App;\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\index.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\actions\\index.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\notfound.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\ProfileEdit.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\Land.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Profile.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Chat.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\login.js",["150"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport { Collapse } from '@material-ui/core';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { loginUser } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 430,\r\n    height: 550,\r\n    background: \"rgba(0,0,0,0.5)\",\r\n    alignContent: \"center\"\r\n  },\r\n  title: {\r\n    fontFamily: \"Century Gothic\",\r\n    fontWeight: \"semi-bold\",\r\n    fontSize: \"2rem\",\r\n    color: \"#fff\"\r\n  },\r\n  signUp: {\r\n    fontFamily: \"Century Gothic\",\r\n    fontSize: \"1rem\",\r\n    color: \"#fff\",\r\n  },\r\n  media: {\r\n    height: 225,\r\n  },\r\n  description: {\r\n    fontFamily: \"Century Gothic\",\r\n    fontSize: \"1rem\",\r\n    color: \"#ddd\"      \r\n  },\r\n  textField: {\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  button: {\r\n    fontFamily: \"Century Gothic\",\r\n    fontSize: \"1rem\",\r\n    backgroundColor: \"#fff\"\r\n  }\r\n});\r\n\r\n\r\nconst Login = ({ loginUser, isLoggedIn, checked }) => {\r\n  const classes = useStyles();\r\n  let [data, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  if (isLoggedIn) return <Redirect to=\"/games\" />;\r\n\r\n  let { email, password, username } = data;\r\n  const onChange = (e) => {\r\n    setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    if (email === \"\" || password === \"\" || username === \"\") {\r\n      return swal(\"Please fill all required fields\");\r\n    } else loginUser(email, password, username);\r\n  };\r\n\r\n  return (\r\n  // <Collapse in = {checked} {...(checked ? { timeout: 1000 } : {})} >\r\n   <Card className={classes.root}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image= {process.env.PUBLIC_URL + `/Images/login.jpg`}\r\n        title=\"Login\"\r\n      />\r\n      \r\n      <CardContent>\r\n        \r\n              <TextField \r\n                id=\"standard-size-small\" \r\n                variant=\"outlined\"\r\n                className = {classes.textField} \r\n                style = {{width: 390}}\r\n                onChange={(e) => onChange(e)}\r\n                type=\"username\"\r\n                name=\"username\"\r\n                value={username}\r\n                placeholder=\"username\"\r\n              />\r\n\r\n              <br /><br />\r\n\r\n              <TextField \r\n                id=\"standard-size-small\" \r\n                variant=\"outlined\" \r\n                className = {classes.textField}\r\n                style = {{width: 390}}\r\n                onChange={(e) => onChange(e)}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                placeholder=\"E-mail Address\"\r\n              />\r\n\r\n              <br /><br />\r\n\r\n              <TextField \r\n                id=\"standard-size-small\" \r\n                variant=\"outlined\"\r\n                className = {classes.textField}\r\n                style = {{width: 390}} \r\n                onChange={(e) => onChange(e)}\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n              />\r\n\r\n              <br /><br />   \r\n\r\n              <Button \r\n                style = {{width: 390}}\r\n                type=\"submit\" \r\n                onClick={(e) => onsubmit(e)} \r\n                className = {classes.button}\r\n              >\r\n                Submit\r\n              </Button>\r\n\r\n              <br />\r\n\r\n              <Typography className = {classes.signUp} style = {{textAlign: \"center\"}}>\r\n                Don't have an account? <a href=\"/addUser\">SignUp</a>\r\n              </Typography>\r\n\r\n      </CardContent>\r\n    </Card>\r\n    // </Collapse>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoggedIn: state.authReducer.isLoggedIn,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\setToken.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\SearchForm.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\register.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameInfo.js",["151","152"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setGame, removeGame } from \"../../actions\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    height: '100vh',\r\n    backgroundImage: `url(${process.env.PUBLIC_URL + '../Images/chatRoom.jpg'})`,\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(6, 8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n    \r\n  },\r\n}));\r\n\r\n//This component dispatches two different actions, setGame and removeGame\r\n//Pass in props as a parameter because we will be accessing the game id in the component from the params prop.\r\nfunction GameInfo(props) {\r\n  const classes = useStyles();\r\n  //Call the react-redux useSelector hook to get the game object from the Redux store and assign it to the component's state.\r\n  const game = useSelector((state) => state.game);\r\n  const dispatch = useDispatch();\r\n  \r\n  //useEffect: The React useEffect hook essentially replaces the lifecycle methods (componentDidMount, componentDidUpdate, componentWillUnmount). Use it when we need to rerender our component.\r\n  //The useEffect hook takes a second argument called the dependency array that instructs React to rerun the effect only when the listed elements in the array change. React will post a warning in the console if you leave something out.\r\n  useEffect(\r\n    function () {\r\n      axios\r\n        .get(`/api/games/${props.match.params._id}`)\r\n        .then(function (response) {\r\n          dispatch(setGame(response.data));\r\n        })\r\n        .catch(function (error) {\r\n          console.log(\"error\", error);\r\n        });\r\n    },\r\n    [dispatch, props]\r\n  );\r\n\r\n  function handleDelete() {\r\n    axios\r\n      .delete(`/api/games/${game._id}`)\r\n      .then(function () {\r\n        dispatch(removeGame(game._id));\r\n        props.history.push(\"/\");\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"error\", error);\r\n      });\r\n  }\r\n\r\n  //User Authentication\r\n  var value = false;\r\n  if (window.localStorage.email === game.email) {\r\n    value = true;\r\n  } else {\r\n    value = false;\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <div component=\"main\" className={classes.root} justify= \"center\">\r\n      \r\n      <br/><br/><br/><br/>\r\n     \r\n      <Grid>\r\n      <CssBaseline />\r\n      \r\n      {value === false ? (\r\n        <div className= \"container text-center\" style = {{  width: \"60%\", background: \"#070d13\", opacity: \"85%\", borderRadius:\"1rem\"}}>\r\n          \r\n          <br/>\r\n          \r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"26px\"}}>@{game.username}'s Post</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"32px\", fontWeight: \"bold\", textDecoration: \"underline\"}}>{game.gameName}</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"22px\"}}>Date: {game.gameDate}</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"22px\"}}>Duration: {game.gameDuration}</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"22px\"}}>Governorate: {game.gameGovernorate}</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"22px\"}}>Type: {game.gameType}</p>\r\n          \r\n          <img \r\n            style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"12px\"}}\r\n            src = {game.selectedFile} alt= \"Game Photo\"/>\r\n          \r\n          <br/><br/>\r\n         \r\n          <div className=\"btn-group\">\r\n            <Link \r\n              to=\"/\" \r\n              variant=\"contained\"\r\n              className = \"btn btn-light btn-block btn-lg\"\r\n              >\r\n              Close\r\n            </Link>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n        </div>\r\n      ) : (\r\n        <div className= \"container text-center\" style = {{  width: \"60%\", background: \"#070d13\", opacity: \"85%\", borderRadius:\"1rem\"}}>\r\n         \r\n          <br/>\r\n         \r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"26px\"}}>@{game.username}'s Post</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"32px\", fontWeight: \"bold\", textDecoration: \"underline\"}}>{game.gameName}</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"22px\"}}>Date: {game.gameDate}</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"22px\"}}>Duration: {game.gameDuration}</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"22px\"}}>Governorate: {game.gameGovernorate}</p>\r\n          <p style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"22px\"}}>Type: {game.gameType}</p>\r\n         \r\n          <img \r\n            style = {{color: \"#fff\", fontFamily: \"Century Gothic\", fontSize: \"12px\"}}\r\n            src = {game.selectedFile} alt= \"Game Photo\" width = \"200\"/>\r\n         \r\n          <br/><br/>\r\n\r\n          <div className=\"btn-group text-center\">\r\n            <Link\r\n              to={{ pathname: `/games/${game._id}/edit` }}\r\n              variant=\"contained\"\r\n              className = \"btn btn-light btn-block btn-lg\"\r\n              style = {{marginRight: \"15px\"}}\r\n            >\r\n              Edit\r\n            </Link>\r\n            <button\r\n              to=\"/\" \r\n              variant=\"contained\"\r\n              className = \"btn btn-light btn-block btn-lg\"\r\n              style = {{marginRight: \"15px\"}}              \r\n              onClick={handleDelete}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link \r\n              to=\"/\" \r\n              variant=\"contained\"\r\n              className = \"btn btn-light btn-block btn-lg\"\r\n              >\r\n              Close\r\n            </Link>\r\n          </div>\r\n          \r\n          <hr />\r\n        \r\n        </div>\r\n      )}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameInfo;\r\n\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameAdd.js",["153","154","155","156"],"import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { post } from \"axios\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { addGame } from \"../../actions\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    image: {\r\n      maxHeight: \"100vh\",\r\n      maxWidth: \"500vh\",\r\n      backgroundImage: `url(${process.env.PUBLIC_URL + '../Images/newGame.jpg'})`,\r\n      backgroundRepeat: \"no-repeat\",\r\n      alignContent: \"center\", \r\n\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(6, 8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      \r\n    },\r\n  }));\r\n\r\nfunction GameAdd(props) {\r\n  const classes = useStyles();\r\n    const initialState = {\r\n      gameName: \"\",\r\n      gameType: \"Select Game\",\r\n      gameDuration: \"\",\r\n      gameDate: \"\",\r\n      gameGovernorate: \"Select Governorate\",\r\n      selectedFile: \"\",\r\n      likeCount: 0,\r\n      joinCount: [],\r\n      comment:[],\r\n      email: window.localStorage.email,\r\n      username: window.localStorage.username,\r\n    };\r\n  \r\n    //useState: UseState is a two element array that contains the current state as the\r\n    //first element and a function to update it as the second. Here we're assigning the\r\n    //(const) variable \"game\" to the current state value, and \"setFields\" to the update function.\r\n    const [game, setFields] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n  \r\n    //Every time a user types a character in a form input field the onChange property calls the handleChange\r\n    //handler function passing the event object as an implicit argument. The event object includes the target\r\n    //(i.e., the form field element) which has attributes for field name and value.\r\n    function handleChangeName(event) {\r\n      // ...game spread operator so that the new character is added to the existing article value, otherwise it will just overwrite it.\r\n      setFields({ ...game, gameName: event.target.value });\r\n    }\r\n  \r\n    function handleChangeType(event) {\r\n      setFields({ ...game, gameType: event.target.value });\r\n    }\r\n  \r\n    function handleChangeGovernorate(event) {\r\n      setFields({ ...game, gameGovernorate: event.target.value });\r\n    }\r\n  \r\n    function handleChangeDate(event) {\r\n      setFields({ ...game, gameDate: event.target.value });\r\n    }\r\n  \r\n    function handleChangeDuration(event) {\r\n      setFields({ ...game, gameDuration: event.target.value });\r\n    }\r\n  \r\n    //When the user presses the submit button it calls the handleSubmit function. This is where our API post\r\n    //request is sent with the game object sent as the payload. If it successfully posts it will send back\r\n    //the new game object. Then we dispatch the addGame action passing in the new game object.\r\n    function handleSubmit(event) {\r\n      event.preventDefault();\r\n      post(\"/api/games\", {\r\n        gameName: game.gameName,\r\n        gameType: game.gameType,\r\n        gameDate: game.gameDate,\r\n        gameDuration: game.gameDuration,\r\n        gameGovernorate: game.gameGovernorate,\r\n        selectedFile: game.selectedFile,\r\n        email: game.email,\r\n        username: game.username\r\n      })\r\n        .then(function (response) {\r\n          dispatch(addGame(response.data));\r\n        })\r\n        .then(function () {\r\n          props.history.push(\"/\");\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  \r\n    function handleCancel() {\r\n      props.history.push(\"/\");\r\n    }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root} justify= \"center\">\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"text\"\r\n              required\r\n              value={game.gameName}\r\n              onChange={handleChangeName}\r\n              className=\"form-control\"\r\n              placeholder=\"Type in your post here...\"\r\n            />\r\n\r\n            <br/><br/>\r\n\r\n            <Select\r\n              type=\"text\"\r\n              required\r\n              value={game.gameGovernorate}\r\n              onChange={handleChangeGovernorate}\r\n              className=\"form-control\"\r\n              placeholder=\"Select Governorate\"\r\n            >\r\n              <MenuItem value=\"SelectGovernorate\">Select Governorate</MenuItem>\r\n              <MenuItem value=\"Irbid\"> Irbid</MenuItem>\r\n              <MenuItem value=\"Ajloun\"> Ajloun</MenuItem>\r\n              <MenuItem value=\"Jerash\"> Jerash</MenuItem>\r\n              <MenuItem value=\"Mafraq\"> Mafraq</MenuItem>\r\n              <MenuItem value=\"Balqa\"> Balqa</MenuItem>\r\n              <MenuItem value=\"Amman\"> Amman</MenuItem>\r\n              <MenuItem value=\"Zarqa\"> Zarqa</MenuItem>\r\n              <MenuItem value=\"Madaba\"> Madaba</MenuItem>\r\n              <MenuItem value=\"Karak\"> Karak</MenuItem>\r\n              <MenuItem value=\"Tafilah\"> Tafilah</MenuItem>\r\n              <MenuItem value=\"Ma'an\"> Ma'an</MenuItem>\r\n              <MenuItem value=\"Aqaba\"> Aqaba</MenuItem>\r\n            </Select>\r\n\r\n            <br/><br/>\r\n\r\n            <Select\r\n              type=\"text\"\r\n              required\r\n              value={game.gameType}\r\n              onChange={handleChangeType}\r\n              className=\"form-control\"\r\n              placeholder=\"Select Game\"\r\n            >\r\n              <MenuItem value=\"SelectGame\"> Select Game</MenuItem>\r\n              <MenuItem value=\"Paintball\"> Paintball</MenuItem>\r\n              <MenuItem value=\"Football\"> Football</MenuItem>\r\n              <MenuItem value=\"Karting\"> Karting</MenuItem>\r\n              <MenuItem value=\"Basketball\"> Basketball</MenuItem>\r\n              <MenuItem value=\"Laser Tag\"> Laser Tag</MenuItem>\r\n              <MenuItem value=\"Volleyball\"> Volleyball</MenuItem>\r\n              <MenuItem value=\"Rock Climbing\"> Rock Climbing</MenuItem>\r\n              <MenuItem value=\"Horseback Riding\"> Horseback Riding</MenuItem>\r\n              <MenuItem value=\"Handball\"> Handball</MenuItem>\r\n              <MenuItem value=\"Tennis\"> Tennis</MenuItem>\r\n              <MenuItem value=\"Running\"> Running</MenuItem>\r\n              <MenuItem value=\"Other..\"> Others...</MenuItem>\r\n            </Select>\r\n\r\n            <br/>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"date\"\r\n              required\r\n              value={game.gameDate}\r\n              onChange={handleChangeDate}\r\n              className=\"form-control\"\r\n            />\r\n\r\n            <br/><br/>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"text\"\r\n              required\r\n              value={game.gameDuration}\r\n              onChange={handleChangeDuration}\r\n              className=\"form-control\"\r\n              placeholder=\"Set game's duration\"\r\n            />\r\n\r\n            <br/><br/>\r\n\r\n            <Typography>Upload Image</Typography>\r\n            <FileBase\r\n                type=\"file\"\r\n                multiple={false}\r\n                onDone={({ base64 }) =>\r\n                  setFields({ ...game, selectedFile: base64 })\r\n                }\r\n              />\r\n\r\n            <br /><br/>\r\n\r\n            <Button \r\n              fullWidth\r\n              variant=\"contained\"\r\n              style={{color: \"white\", backgroundColor: \"#070d13\"}}\r\n              type=\"submit\" \r\n              value=\"Post\"\r\n            > \r\n              Post\r\n            </Button>\r\n\r\n            <br /><br/>\r\n\r\n            <Button \r\n              fullWidth\r\n              variant=\"contained\"\r\n              style={{color: \"white\", backgroundColor: \"#070d13\"}}            \r\n              type=\"button\" \r\n              onClick={handleCancel}\r\n            > \r\n              Cancel \r\n            </Button>\r\n            \r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default GameAdd;\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameEdit.js",["157","158","159"],"import React, { useState, useEffect } from \"react\";\r\nimport { get, patch } from \"axios\";\r\nimport FileBase from \"react-file-base64\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    image: {\r\n      maxHeight: \"100vh\",\r\n      maxWidth: \"500vh\",\r\n      backgroundImage: `url(${process.env.PUBLIC_URL + '../../Images/editPost.jpg'})`,\r\n      backgroundRepeat: \"no-repeat\",\r\n      alignContent: \"center\", \r\n\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(6, 8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(1),\r\n      \r\n    }\r\n  }));\r\n\r\nfunction GameEdit(props) {\r\n  const classes = useStyles();\r\n\r\n  const initialState = { \r\n    gameName: \"\",     \r\n    gameType: \"Select Game\",\r\n    gameDuration: \"\",\r\n    gameDate: \"\",\r\n    gameGovernorate: \"Select Governorate\",\r\n    selectedFile: \"\"\r\n  };\r\n\r\n  const [game, setGame] = useState(initialState);\r\n\r\n  useEffect(\r\n    function () {\r\n      async function getGame() {\r\n        try {\r\n          const response = await get(`/api/games/${props.match.params._id}`);\r\n          console.log(response.data)\r\n          setGame(response.data);\r\n        } catch (error) {\r\n          console.log(error, \"useEffect in GameEdit /failed\");\r\n        }\r\n      }\r\n      getGame();\r\n    },\r\n    [props]\r\n  );\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    async function updateGame() {\r\n      try {\r\n        await patch(`/api/games/${game._id}`, game);\r\n        console.log(game._id, \"ID from the edit\")\r\n        props.history.push(`/games/${game._id}`);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    updateGame();\r\n  }\r\n\r\n  function handleChangeName(event) {\r\n    // ...game spread operator so that the new character is added to the existing article value, otherwise it will just overwrite it.\r\n    setGame({ ...game, gameName: event.target.value });\r\n  }\r\n\r\n  function handleChangeType(event) {\r\n    setGame({ ...game, gameType: event.target.value });\r\n  }\r\n\r\n  function handleChangeGovernorate(event) {\r\n    setGame({ ...game, gameGovernorate: event.target.value });\r\n  }\r\n\r\n  function handleChangeDate(event) {\r\n    setGame({ ...game, gameDate: event.target.value });\r\n  }\r\n\r\n  function handleChangeDuration(event) {\r\n    setGame({ ...game, gameDuration: event.target.value });\r\n  }\r\n\r\n  function handleCancel() {\r\n    props.history.push(`/games/${game._id}`);\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root} justify= \"center\">\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        \r\n        <div className={classes.paper}>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"text\"\r\n              required\r\n              value={game.gameName}\r\n              onChange={handleChangeName}\r\n              className=\"form-control\"\r\n              placeholder=\"Type in your post here...\"\r\n            />\r\n\r\n            <br/><br/>\r\n\r\n            <Select\r\n              type=\"text\"\r\n              required\r\n              value={game.gameGovernorate}\r\n              onChange={handleChangeGovernorate}\r\n              className=\"form-control\"\r\n              placeholder=\"Select Governorate\"\r\n            >\r\n              <MenuItem value=\"SelectGovernorate\">Select Governorate</MenuItem>\r\n              <MenuItem value=\"Irbid\"> Irbid</MenuItem>\r\n              <MenuItem value=\"Ajloun\"> Ajloun</MenuItem>\r\n              <MenuItem value=\"Jerash\"> Jerash</MenuItem>\r\n              <MenuItem value=\"Mafraq\"> Mafraq</MenuItem>\r\n              <MenuItem value=\"Balqa\"> Balqa</MenuItem>\r\n              <MenuItem value=\"Amman\"> Amman</MenuItem>\r\n              <MenuItem value=\"Zarqa\"> Zarqa</MenuItem>\r\n              <MenuItem value=\"Madaba\"> Madaba</MenuItem>\r\n              <MenuItem value=\"Karak\"> Karak</MenuItem>\r\n              <MenuItem value=\"Tafilah\"> Tafilah</MenuItem>\r\n              <MenuItem value=\"Ma'an\"> Ma'an</MenuItem>\r\n              <MenuItem value=\"Aqaba\"> Aqaba</MenuItem>\r\n            </Select>\r\n\r\n            <br/><br/>\r\n\r\n            <Select\r\n              type=\"text\"\r\n              required\r\n              value={game.gameType}\r\n              onChange={handleChangeType}\r\n              className=\"form-control\"\r\n              placeholder=\"Select Game\"\r\n            >\r\n              <MenuItem value=\"SelectGame\"> Select Game</MenuItem>\r\n              <MenuItem value=\"Paintball\"> Paintball</MenuItem>\r\n              <MenuItem value=\"Football\"> Football</MenuItem>\r\n              <MenuItem value=\"Karting\"> Karting</MenuItem>\r\n              <MenuItem value=\"Basketball\"> Basketball</MenuItem>\r\n              <MenuItem value=\"Laser Tag\"> Laser Tag</MenuItem>\r\n              <MenuItem value=\"Volleyball\"> Volleyball</MenuItem>\r\n              <MenuItem value=\"Rock Climbing\"> Rock Climbing</MenuItem>\r\n              <MenuItem value=\"Horseback Riding\"> Horseback Riding</MenuItem>\r\n              <MenuItem value=\"Handball\"> Handball</MenuItem>\r\n              <MenuItem value=\"Tennis\"> Tennis</MenuItem>\r\n              <MenuItem value=\"Running\"> Running</MenuItem>\r\n              <MenuItem value=\"Other..\"> Others...</MenuItem>\r\n            </Select>\r\n\r\n            <br/>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"date\"\r\n              required\r\n              value={game.gameDate}\r\n              onChange={handleChangeDate}\r\n              className=\"form-control\"\r\n            />\r\n\r\n            <br/><br/>\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"text\"\r\n              required\r\n              value={game.gameDuration}\r\n              onChange={handleChangeDuration}\r\n              className=\"form-control\"\r\n              placeholder=\"Set game's duration\"\r\n            />\r\n\r\n            <br/><br/>\r\n\r\n            <Typography>Upload Image</Typography>\r\n            <FileBase\r\n                type=\"file\"\r\n                multiple={false}\r\n                onDone={({ base64 }) =>\r\n                  setGame({ ...game, selectedFile: base64 })\r\n                }\r\n              />\r\n\r\n            <br /><br/>\r\n\r\n            <Button \r\n              fullWidth\r\n              variant=\"contained\"\r\n              style={{color: \"white\", backgroundColor: \"#070d13\"}}\r\n              type=\"submit\" \r\n              value=\"Post\"\r\n            > \r\n              Post\r\n            </Button>\r\n\r\n            <br /><br/>\r\n\r\n            <Button \r\n              fullWidth\r\n              variant=\"contained\"\r\n              style={{color: \"white\", backgroundColor: \"#070d13\"}}            \r\n              type=\"button\" \r\n              onClick={handleCancel}\r\n            > \r\n              Cancel \r\n            </Button>\r\n            \r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default GameEdit;\r\n\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\ProtectedRoute.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameList.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\gamesReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\gameReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\chatReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\profileReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Profilegames.js",["160","161","162"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { patch } from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport { likePost, unlikePost, joinPost, unjoinPost, setGames } from \"../../actions/index.js\"\r\n\r\n// import { heart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// import { copyFileSync } from \"fs\";\r\n\r\nexport default function Profilegames() {\r\n\r\n  const [commentField, setComment] = useState({ comment: \"\", id: \"\", username: window.localStorage.username, joins: 0, likes: 0 });\r\n  const [games, setGames] = useState([]);\r\n  const dispatch = useDispatch();\r\n  console.log(games, \"games for the warning\")\r\n  function handleChangeComment(event) {\r\n    setComment({ ...commentField, comment: event.target.value, id: event.target.name, username: window.localStorage.username });\r\n  }\r\n\r\n\r\n  function handleSubmitComment(event) {\r\n    event.preventDefault();\r\n    async function comment() {\r\n      try {\r\n        await patch(`/api/games/${commentField.id}/comment`, commentField);\r\n        // console.log(commentField.id, \"ID from the edit\")\r\n        games.history.push(`/games/${commentField.id}/comment`);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    comment();\r\n  }\r\n\r\n  useEffect(function () {\r\n    async function getGames() {\r\n      try {\r\n        const response = await axios.get(\"/api/games\");\r\n        setGames(response.data);\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n      }\r\n    }\r\n    getGames();\r\n  }, []);\r\n\r\n  // conditional rendering for notifications\r\n\r\n  return (\r\n    <div>\r\n      <MDBContainer>\r\n        <MDBRow>\r\n\r\n          <MDBCol>\r\n            {games.map((game) => {\r\n                if (game.username === window.localStorage.username) {\r\n              return (\r\n\r\n                <div key={game._id}>\r\n\r\n                  <p style = {{color: \"#fff \", fontSize: \"32px\", fontFamily: \"Century Gothic\", fontWeight: \"bold\"}}>\r\n                    <Link to={`/games/${game._id}`}>{game.gameName}</Link>\r\n                  </p>\r\n                  \r\n                  <p style = {{color: \"#b9b9b9\", fontSize: \"14px\", fontFamily: \"Century Gothic\"}}>\r\n                    {game.createdAt}\r\n                  </p>\r\n                  \r\n                  {/* <MDBContainer> */}\r\n                    <MDBRow>\r\n\r\n                      <MDBCol>\r\n                        <span style = {{color: \"#b9b9b9\", fontSize: \"12px\", fontFamily: \"Century Gothic\"}} key={game.gameGovernorate}>\r\n                          Governorate:\r\n                          <span style = {{color: \"#fff \", fontSize: \"14px\", fontFamily: \"Century Gothic\", fontWeight: \"bold\"}}>\r\n                            Jordan/{game.gameGovernorate}\r\n                          </span>\r\n                        </span>\r\n\r\n                        <span style = {{ marginLeft: \"50px\", color: \"#b9b9b9\", fontSize: \"12px\", fontFamily: \"Century Gothic\"}}>Game: \r\n                          <span style = {{color: \"#fff \", fontSize: \"14px\", fontFamily: \"Century Gothic\", fontWeight: \"bold\"}}>\r\n                            {game.gameType}\r\n                          </span>\r\n                        </span>\r\n                      </MDBCol>\r\n\r\n                      <MDBCol size=\"12\">\r\n                        <span style = {{color: \"#b9b9b9\", fontSize: \"12px\", fontFamily: \"Century Gothic\"}}>\r\n                          Date: \r\n                          <span style = {{color: \"#fff \", fontSize: \"14px\", fontFamily: \"Century Gothic\", fontWeight: \"bold\"}}>\r\n                            {game.gameDate}\r\n                          </span>\r\n                        </span>\r\n\r\n                        <span style = {{ marginLeft: \"120px\", color: \"#b9b9b9\", fontSize: \"12px\", fontFamily: \"Century Gothic\"}}>\r\n                          Duration: \r\n                          <span style = {{color: \"#fff \", fontSize: \"14px\", fontFamily: \"Century Gothic\", fontWeight: \"bold\"}}>\r\n                            {game.gameDuration}\r\n                          </span>\r\n                        </span>\r\n                      </MDBCol>\r\n\r\n                    </MDBRow>\r\n\r\n                    <br/>\r\n\r\n                    <img src={game.selectedFile} width=\"400px\" alt=\"\r\n                    Game Post\" style = {{color: \"#fff \", fontSize: \"14px\", fontFamily: \"Century Gothic\", fontWeight: \"bold\"}}/>\r\n                    \r\n                    <br /><br />\r\n\r\n                    <MDBRow>\r\n\r\n                    <button \r\n                      name={game._id} \r\n                      variant=\"contained\"\r\n                      className = \"btn btn-light btn-sm\"\r\n                      style = {{marginRight: \"5px\"}} \r\n                      onClick={() => dispatch(likePost(game, commentField), console.log(game, commentField, \"commentField, like\"))}\r\n                    >\r\n                      Like | {game.likeCount.length}\r\n                    </button>\r\n\r\n                    <button \r\n                      variant=\"contained\"\r\n                      className = \"btn btn-light btn-sm\"\r\n                      style = {{marginRight: \"5px\"}}  \r\n                      onClick={() => dispatch(unlikePost(game, commentField))}\r\n                    >\r\n                      Unlike\r\n                    </button>\r\n\r\n                    <button \r\n                      name={game._id} \r\n                      variant=\"contained\"\r\n                      className = \"btn btn-light btn-sm\"\r\n                      onClick={() => dispatch(joinPost(game, commentField))}\r\n                    >\r\n                      Join | {game.joinCount.length}\r\n                    </button>\r\n\r\n                    <button \r\n                      name={game._id} \r\n                      variant=\"contained\"\r\n                      className = \"btn btn-light btn-sm\"\r\n                      onClick={() => dispatch(unjoinPost(game, commentField))}\r\n                    >\r\n                      Unjoin\r\n                    </button>\r\n\r\n                    </MDBRow>\r\n\r\n                    {game.joinCount.map((joined, i) => {\r\n                      return (\r\n\r\n                        <div key={i}>\r\n                          <p style = {{color: \"#fff \", fontSize: \"14px\", fontFamily: \"Century Gothic\"}}>\r\n                            Player: @{joined.username}\r\n                          </p>\r\n                        </div>\r\n\r\n                      )}                  \r\n                      )}\r\n                      \r\n                    {/* <form> */}\r\n                        <input\r\n                          name={game._id}\r\n                          id=\"inputGroup-sizing-sm\"\r\n                          type=\"text\"\r\n                          value={commentField.comment.name}\r\n                          onChange={handleChangeComment}\r\n                          className=\"input-sm\"\r\n                          style = {{marginLeft:\"-10px\", width: \"70%\"}}\r\n                          placeholder=\"Type in your comment here...\"\r\n                        />\r\n\r\n                        <button \r\n                          variant=\"contained\"\r\n                          className = \"btn btn-light btn-sm\"\r\n                          onClick={handleSubmitComment}>Comment</button>\r\n                        \r\n                        <br /> <br />\r\n\r\n                        {game.comment.map((theComment, i) => {\r\n                          return (\r\n\r\n                            <div key={i}>\r\n                              {/* {console.log(theComment)} */}\r\n                              <p style = {{color: \"#b9b9b9\", fontSize: \"14px\", fontFamily: \"Century Gothic\"}}>\r\n                                @{theComment.username}: \r\n                                <span style = {{color: \"#fff \", fontSize: \"16px\", fontFamily: \"Century Gothic\", fontWeight: \"bold\"}}>\r\n                                  {theComment.comment}\r\n                                </span>\r\n                              </p>\r\n\r\n                              <hr color= \"white\"></hr>\r\n\r\n                            </div>\r\n                          )\r\n                        })}\r\n                    {/* </form> */}\r\n                  {/* </MDBContainer> */}\r\n                  <hr />\r\n                </div>\r\n              );\r\n            } else {\r\n                  console.log(\"no notifications for now\")\r\n                }\r\n            })}\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     games: state.games,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     setGames: () => dispatch(setGames()),\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Profilegames);\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Filter.js",[],["163","164"],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\firebase\\index.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Header.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Cards.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\AboutUsCard.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\hook\\useWindowPosition.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\register2.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Notifications.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\joinRoomReducer.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":7,"column":3,"nodeType":"171","messageId":"172","endLine":7,"endColumn":10},{"ruleId":"169","severity":1,"message":"173","line":12,"column":49,"nodeType":"171","messageId":"172","endLine":12,"endColumn":53},{"ruleId":"169","severity":1,"message":"174","line":12,"column":55,"nodeType":"171","messageId":"172","endLine":12,"endColumn":65},{"ruleId":"169","severity":1,"message":"175","line":40,"column":8,"nodeType":"171","messageId":"172","endLine":40,"endColumn":12},{"ruleId":"169","severity":1,"message":"176","line":41,"column":8,"nodeType":"171","messageId":"172","endLine":41,"endColumn":27},{"ruleId":"169","severity":1,"message":"177","line":99,"column":9,"nodeType":"171","messageId":"172","endLine":99,"endColumn":16},{"ruleId":"169","severity":1,"message":"178","line":4,"column":10,"nodeType":"171","messageId":"172","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":100,"column":11,"nodeType":"181","endLine":102,"endColumn":58},{"ruleId":"179","severity":1,"message":"180","line":131,"column":11,"nodeType":"181","endLine":133,"endColumn":72},{"ruleId":"169","severity":1,"message":"182","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":134,"column":15,"nodeType":"185","endLine":134,"endColumn":23},{"ruleId":"183","severity":1,"message":"184","line":199,"column":15,"nodeType":"185","endLine":199,"endColumn":23},{"ruleId":"183","severity":1,"message":"184","line":213,"column":15,"nodeType":"185","endLine":213,"endColumn":23},{"ruleId":"183","severity":1,"message":"184","line":125,"column":15,"nodeType":"185","endLine":125,"endColumn":23},{"ruleId":"183","severity":1,"message":"184","line":190,"column":15,"nodeType":"185","endLine":190,"endColumn":23},{"ruleId":"183","severity":1,"message":"184","line":204,"column":15,"nodeType":"185","endLine":204,"endColumn":23},{"ruleId":"169","severity":1,"message":"186","line":2,"column":23,"nodeType":"171","messageId":"172","endLine":2,"endColumn":30},{"ruleId":"169","severity":1,"message":"187","line":7,"column":54,"nodeType":"171","messageId":"172","endLine":7,"endColumn":62},{"ruleId":"188","severity":1,"message":"189","line":58,"column":31,"nodeType":"190","messageId":"191","endLine":58,"endColumn":33},{"ruleId":"165","replacedBy":"192"},{"ruleId":"167","replacedBy":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'Typography' is defined but never used.","'Land' is defined but never used.","'PrimarySearchAppBar' is defined but never used.","'classes' is assigned a value but never used.","'Collapse' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Checkbox' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'connect' is defined but never used.","'setGames' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["194"],["195"],"no-global-assign","no-unsafe-negation"]