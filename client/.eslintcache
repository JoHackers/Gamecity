[{"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\index.js":"3","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\actions\\index.js":"4","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\notfound.js":"5","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\ProfileEdit.js":"6","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\Land.js":"7","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Profile.js":"8","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Chat.js":"9","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\login.js":"10","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\setToken.js":"11","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\SearchForm.js":"12","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\register.js":"13","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameInfo.js":"14","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameAdd.js":"15","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameEdit.js":"16","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\ProtectedRoute.js":"17","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameList.js":"18","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\gamesReducer.js":"19","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\gameReducer.js":"20","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\chatReducer.js":"21","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\profileReducer.js":"22","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\authReducer.js":"23","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Profilegames.js":"24","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Filter.js":"25","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\firebase\\index.js":"26","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Header.js":"27","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Cards.js":"28","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\AboutUsCard.js":"29","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\hook\\useWindowPosition.js":"30","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameRendered.js":"31","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\register2.js":"32"},{"size":1266,"mtime":1609580835751,"results":"33","hashOfConfig":"34"},{"size":12315,"mtime":1609757342281,"results":"35","hashOfConfig":"34"},{"size":623,"mtime":1609580835761,"results":"36","hashOfConfig":"34"},{"size":9058,"mtime":1609580835715,"results":"37","hashOfConfig":"34"},{"size":526,"mtime":1609580835745,"results":"38","hashOfConfig":"34"},{"size":6023,"mtime":1609751555092,"results":"39","hashOfConfig":"34"},{"size":1950,"mtime":1609603769949,"results":"40","hashOfConfig":"34"},{"size":2508,"mtime":1609763772309,"results":"41","hashOfConfig":"34"},{"size":4038,"mtime":1609761610319,"results":"42","hashOfConfig":"34"},{"size":4315,"mtime":1609720829806,"results":"43","hashOfConfig":"34"},{"size":205,"mtime":1609633318570,"results":"44","hashOfConfig":"34"},{"size":722,"mtime":1609580835742,"results":"45","hashOfConfig":"34"},{"size":8652,"mtime":1609754614171,"results":"46","hashOfConfig":"34"},{"size":3217,"mtime":1609580835728,"results":"47","hashOfConfig":"34"},{"size":9360,"mtime":1609755197480,"results":"48","hashOfConfig":"34"},{"size":5294,"mtime":1609580835726,"results":"49","hashOfConfig":"34"},{"size":520,"mtime":1609580835740,"results":"50","hashOfConfig":"34"},{"size":10471,"mtime":1609728338115,"results":"51","hashOfConfig":"34"},{"size":3229,"mtime":1609580835760,"results":"52","hashOfConfig":"34"},{"size":521,"mtime":1609580835758,"results":"53","hashOfConfig":"34"},{"size":423,"mtime":1609580835756,"results":"54","hashOfConfig":"34"},{"size":1245,"mtime":1609580835763,"results":"55","hashOfConfig":"34"},{"size":2633,"mtime":1609580835755,"results":"56","hashOfConfig":"34"},{"size":5736,"mtime":1609580835731,"results":"57","hashOfConfig":"34"},{"size":2848,"mtime":1609580835722,"results":"58","hashOfConfig":"34"},{"size":494,"mtime":1609580835720,"results":"59","hashOfConfig":"34"},{"size":7451,"mtime":1609633798630,"results":"60","hashOfConfig":"34"},{"size":851,"mtime":1609625076622,"results":"61","hashOfConfig":"34"},{"size":2097,"mtime":1609636144821,"results":"62","hashOfConfig":"34"},{"size":724,"mtime":1609613183383,"results":"63","hashOfConfig":"34"},{"size":1403,"mtime":1609711434896,"results":"64","hashOfConfig":"34"},{"size":3012,"mtime":1609757065868,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1kuskvn",{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\index.js",[],["136","137"],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\App.js",["138","139","140","141","142"],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\index.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\actions\\index.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\notfound.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\ProfileEdit.js",["143","144","145","146","147","148","149"],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\Land.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Profile.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Chat.js",["150","151","152"],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\login.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\setToken.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\SearchForm.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\register.js",["153","154","155","156","157","158","159","160"],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameInfo.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameAdd.js",["161","162","163","164","165"],"import React, { useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { post } from \"axios\";\r\nimport FileBase from \"react-file-base64\";\r\nimport { addGame } from \"../../actions\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n// import InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // root: {\r\n    //   height: '100vh',\r\n    //   // background: \"#070d13\",\r\n    // },\r\n    image: {\r\n      maxHeight: \"100vh\",\r\n      maxWidth: \"500vh\",\r\n      backgroundImage: `url(${process.env.PUBLIC_URL + '../Images/newGame.jpg'})`,\r\n      backgroundRepeat: \"no-repeat\",\r\n      alignContent: \"center\", \r\n\r\n    },\r\n    paper: {\r\n      margin: theme.spacing(6, 8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      \r\n    },\r\n    // submitButton: {\r\n    //   color: \"#070d13\"\r\n    // }\r\n  }));\r\n//\r\nconst GameAdd = (props) => {\r\n  const classes = useStyles();\r\n    const initialState = {\r\n      gameName: \"\",\r\n      gameType: \"Select Game\",\r\n      gameDuration: \"\",\r\n      gameDate: \"\",\r\n      gameGovernorate: \"Select Governorate\",\r\n      selectedFile: \"\",\r\n      likeCount: 0,\r\n      joinCount: [],\r\n      comment:[],\r\n      email: window.localStorage.email,\r\n      username: window.localStorage.username,\r\n    };\r\n  \r\n    //useState: UseState is a two element array that contains the current state as the\r\n    //first element and a function to update it as the second. Here we're assigning the\r\n    //(const) variable \"game\" to the current state value, and \"setFields\" to the update function.\r\n    const [game, setFields] = useState(initialState);\r\n    const dispatch = useDispatch();\r\n  \r\n    //Every time a user types a character in a form input field the onChange property calls the handleChange\r\n    //handler function passing the event object as an implicit argument. The event object includes the target\r\n    //(i.e., the form field element) which has attributes for field name and value.\r\n    function handleChangeName(event) {\r\n      // ...game spread operator so that the new character is added to the existing article value, otherwise it will just overwrite it.\r\n      setFields({ ...game, gameName: event.target.value });\r\n    }\r\n  \r\n    function handleChangeType(event) {\r\n      setFields({ ...game, gameType: event.target.value });\r\n    }\r\n  \r\n    function handleChangeGovernorate(event) {\r\n      setFields({ ...game, gameGovernorate: event.target.value });\r\n    }\r\n  \r\n    function handleChangeDate(event) {\r\n      setFields({ ...game, gameDate: event.target.value });\r\n    }\r\n  \r\n    function handleChangeDuration(event) {\r\n      setFields({ ...game, gameDuration: event.target.value });\r\n    }\r\n  \r\n    //When the user presses the submit button it calls the handleSubmit function. This is where our API post\r\n    //request is sent with the game object sent as the payload. If it successfully posts it will send back\r\n    //the new game object. Then we dispatch the addGame action passing in the new game object.\r\n    function handleSubmit(event) {\r\n      event.preventDefault();\r\n      post(\"/api/games\", {\r\n        gameName: game.gameName,\r\n        gameType: game.gameType,\r\n        gameDate: game.gameDate,\r\n        gameDuration: game.gameDuration,\r\n        gameGovernorate: game.gameGovernorate,\r\n        selectedFile: game.selectedFile,\r\n        email: game.email,\r\n        username: game.username,\r\n      })\r\n        .then(function (response) {\r\n          dispatch(addGame(response.data));\r\n        })\r\n        .then(function () {\r\n          props.history.push(\"/\");\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n  \r\n    function handleCancel() {\r\n      props.history.push(\"/\");\r\n    }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root} justify= \"center\">\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          {/* <Avatar className={classes.avatar}>\r\n            <EditIcon />\r\n          </Avatar> */}\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"text\"\r\n              required\r\n              value={game.gameName}\r\n              onChange={handleChangeName}\r\n              className=\"form-control\"\r\n              placeholder=\"Type in your post here...\"\r\n            />\r\n            <br/><br/>\r\n            <Select\r\n              type=\"text\"\r\n              required\r\n              value={game.gameGovernorate}\r\n              onChange={handleChangeGovernorate}\r\n              className=\"form-control\"\r\n              placeholder=\"Select Governorate\"\r\n            >\r\n              <MenuItem value=\"SelectGovernorate\">Select Governorate</MenuItem>\r\n              <MenuItem value=\"Irbid\"> Irbid</MenuItem>\r\n              <MenuItem value=\"Ajloun\"> Ajloun</MenuItem>\r\n              <MenuItem value=\"Jerash\"> Jerash</MenuItem>\r\n              <MenuItem value=\"Mafraq\"> Mafraq</MenuItem>\r\n              <MenuItem value=\"Balqa\"> Balqa</MenuItem>\r\n              <MenuItem value=\"Amman\"> Amman</MenuItem>\r\n              <MenuItem value=\"Zarqa\"> Zarqa</MenuItem>\r\n              <MenuItem value=\"Madaba\"> Madaba</MenuItem>\r\n              <MenuItem value=\"Karak\"> Karak</MenuItem>\r\n              <MenuItem value=\"Tafilah\"> Tafilah</MenuItem>\r\n              <MenuItem value=\"Ma'an\"> Ma'an</MenuItem>\r\n              <MenuItem value=\"Aqaba\"> Aqaba</MenuItem>\r\n            </Select>\r\n            <br/><br/>\r\n            <Select\r\n              type=\"text\"\r\n              required\r\n              value={game.gameType}\r\n              onChange={handleChangeType}\r\n              className=\"form-control\"\r\n              placeholder=\"Select Game\"\r\n            >\r\n              <MenuItem value=\"SelectGame\"> Select Game</MenuItem>\r\n              <MenuItem value=\"Paintball\"> Paintball</MenuItem>\r\n              <MenuItem value=\"Football\"> Football</MenuItem>\r\n              <MenuItem value=\"Karting\"> Karting</MenuItem>\r\n              <MenuItem value=\"Basketball\"> Basketball</MenuItem>\r\n              <MenuItem value=\"Laser Tag\"> Laser Tag</MenuItem>\r\n              <MenuItem value=\"Volleyball\"> Volleyball</MenuItem>\r\n              <MenuItem value=\"Rock Climbing\"> Rock Climbing</MenuItem>\r\n              <MenuItem value=\"Horseback Riding\"> Horseback Riding</MenuItem>\r\n              <MenuItem value=\"Handball\"> Handball</MenuItem>\r\n              <MenuItem value=\"Tennis\"> Tennis</MenuItem>\r\n              <MenuItem value=\"Running\"> Running</MenuItem>\r\n              <MenuItem value=\"Other..\"> Others...</MenuItem>\r\n            </Select>\r\n            <br/>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"date\"\r\n              required\r\n              value={game.gameDate}\r\n              onChange={handleChangeDate}\r\n              className=\"form-control\"\r\n            />\r\n            <br/><br/>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"text\"\r\n              required\r\n              value={game.gameDuration}\r\n              onChange={handleChangeDuration}\r\n              className=\"form-control\"\r\n              placeholder=\"Set game's duration\"\r\n            />\r\n            <br/><br/>\r\n            <Typography>Upload Image</Typography>\r\n            <FileBase\r\n                type=\"file\"\r\n                multiple={false}\r\n                onDone={({ base64 }) =>\r\n                  setFields({ ...game, selectedFile: base64 })\r\n                }\r\n              />\r\n            <br /><br/>\r\n            <Button \r\n              fullWidth\r\n              variant=\"contained\"\r\n              style={{color: \"white\", backgroundColor: \"#070d13\"}}\r\n              type=\"submit\" \r\n              value=\"Post\"\r\n            > \r\n              Post\r\n            </Button>\r\n            <br /><br/>\r\n            <Button \r\n              fullWidth\r\n              variant=\"contained\"\r\n              style={{color: \"white\", backgroundColor: \"#070d13\"}}            \r\n              type=\"button\" \r\n              onClick={handleCancel}\r\n            > \r\n              Cancel \r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default GameAdd;\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameEdit.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\ProtectedRoute.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameList.js",["166","167","168","169","170","171","172","173","174"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { patch } from \"axios\";\r\nimport Filter from \"./Filter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport { likePost, unlikePost, joinPost, unjoinPost, setGames } from \"../../actions/index.js\"\r\nimport GameRendered from \"../games/GameRendered\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbDownAltIcon from '@material-ui/icons/ThumbDownAlt';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport PersonAddDisabledIcon from '@material-ui/icons/PersonAddDisabled';\r\n\r\n\r\n\r\n// import Chat from '../pages/Chat';\r\n// import { heart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// import { copyFileSync } from \"fs\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: 550,\r\n    height: 600\r\n  },\r\n  buttons: {\r\n    // padding: 10\r\n  },\r\n  newGameButton: {\r\n    width: 550,\r\n  },\r\n  notifications: {\r\n      // width: \"80%\",\r\n      marginRight: 50,\r\n      marginLeft: 50\r\n  },\r\n  ad:{\r\n    // marginRight: 10,\r\n    // marginLeft: 50\r\n  }\r\n});\r\n\r\nfunction GameList(props) {\r\n  const classes = useStyles();\r\n\r\n  const [commentField, setComment] = useState({ comment: \"\", id: \"\", username: window.localStorage.username, joins: 0, likes: 0 });\r\n  const [games, setGames] = useState([]);\r\n  const dispatch = useDispatch();\r\n  console.log(games, \"games for the warning\")\r\n  function handleChangeComment(event) {\r\n    setComment({ ...commentField, comment: event.target.value, id: event.target.name, username: window.localStorage.username });\r\n  }\r\n\r\n\r\n  function handleSubmitComment(event) {\r\n    event.preventDefault();\r\n    async function comment() {\r\n      try {\r\n        await patch(`/api/games/${commentField.id}/comment`, commentField);\r\n        // console.log(commentField.id, \"ID from the edit\")\r\n        props.history.push(`/games/${commentField.id}/comment`);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    comment();\r\n  }\r\n\r\n  useEffect(function () {\r\n    async function getGames() {\r\n      try {\r\n        const response = await axios.get(\"/api/games\");\r\n        setGames(response.data);\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n      }\r\n    }\r\n    getGames();\r\n  }, []);\r\n\r\n  // conditional rendering for notifications\r\n  var useremail = window.localStorage.email;\r\n  var value = false;\r\n  if (window.localStorage.length > 0) {\r\n    value = true;\r\n  } else {\r\n    value = false;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <br/><br/><br/>\r\n      <Grid container direction = \"row\" justify= \"center\" alignItems=\"flex-start\">\r\n        <Grid item  xs={6} sm ={3} className= {classes.notifications}>\r\n            <br></br>\r\n            <Filter />\r\n\r\n            {/* Notifications part */}\r\n            <hr></hr>\r\n\r\n            <div>\r\n              <p style= {{fontSize: \"20px\", fontWeight: \"bold\"}}>{window.localStorage.username}'s Notifications </p>\r\n              {props.games.filteredItems.map((game) => {\r\n                if (game.username === window.localStorage.username) {\r\n                  return (\r\n                    <div key={game._id}>\r\n                        <form>\r\n                          <div className=\"form-group\">\r\n                            {game.comment.map((theComment, i) => {\r\n                              return (\r\n                                <div key={i}>\r\n                                  <p style= {{fontSize: \"12px\"}}>\r\n                                    @{theComment.username} commented: \"\r\n                                    {theComment.comment}\" on \"\r\n                                    <Link to={`/games/${game._id}`}>\r\n                                      {game.gameName}\r\n                                    </Link>\r\n                                    \" post.\r\n                                  </p>\r\n                                  <hr/>\r\n                                </div>\r\n                              );\r\n                            })}\r\n                          </div>\r\n                        </form>\r\n                    </div>\r\n                  );\r\n                } else {\r\n                  console.log(\"no notifications for now\")\r\n                }\r\n              }, null)}\r\n            </div>\r\n            {/* Notifications part done */}\r\n            </Grid>            \r\n            <Grid item  xs={12} sm={6} >\r\n                  <Button variant=\"outlined\" color=\"primary\" className = {classes.newGameButton} >\r\n                    <Link to=\"/games/new\">\r\n                      New Game\r\n                    </Link>\r\n                  </Button> \r\n            {props.games.filteredItems.map((game) => {\r\n              return (\r\n                <div key={game._id}>\r\n                <br/><br/>\r\n                <Card className={classes.card}>\r\n                <CardActionArea>\r\n                  <Grid>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Game Image\"\r\n                    style={{ height: \"150px\" }} \r\n                    image={game.selectedFile}\r\n                    title=\"Image goes here\"\r\n                  />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h5\">@{game.username}</Typography>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    <Link to={`/games/${game._id}`}>{game.gameName}</Link>\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h6\">{game.createdAt}</Typography>\r\n                    <Typography variant=\"body1\"  component=\"h5\">\r\n                      Location: Jordan/{game.gameGovernorate}, Game: {game.gameType}, Date: {game.gameDate}, Duration: {game.gameDuration} \r\n                      <hr />\r\n                    </Typography>\r\n                    <IconButton >\r\n                    {/* {value === false ? ( */}\r\n                          <ThumbUpAltIcon className = {classes.buttons} name={game._id} onClick={() => dispatch(likePost(game, commentField))}/> \r\n                          <ThumbDownAltIcon onClick={() => dispatch(unlikePost(game, commentField))}/>\r\n                      {/* // ) : ( */}\r\n                        {/* // )} */}\r\n                        <div>\r\n                          <PersonAddIcon name={game._id} onClick={() => dispatch(joinPost(game, commentField))}/>\r\n                          </div>\r\n                        <PersonAddDisabledIcon name={game._id} onClick={() => dispatch(unjoinPost(game, commentField))}/>\r\n                    </IconButton>\r\n                    <hr/>\r\n                    <Typography gutterBottom variant=\"body1\" component=\"h5\">Likes: {game.likeCount.length} | Joined: {game.joinCount.length}</Typography>\r\n                    {game.joinCount.map((joined, i) => {\r\n                      return (\r\n                        <div key={i}>\r\n                          <Typography gutterBottom variant=\"body2\" component=\"h5\">Joined: @{joined.username}</Typography>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                    <hr/>\r\n                    <Grid  xs={6} sm= {3}>\r\n                        <TextField \r\n                          id=\"standard-size-small\" \r\n                          variant=\"outlined\"\r\n                          className = {classes.textField} \r\n                          style = {{width: 390}}\r\n                          name={game._id}\r\n                          type=\"text\"\r\n                          value={commentField.comment.name}\r\n                          onChange={handleChangeComment}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Type in your comment here...\"\r\n                        />\r\n                        <Button onClick={handleSubmitComment}>Comment</Button>\r\n                        <br /> <br />\r\n                        {game.comment.map((theComment, i) => {\r\n                          return (\r\n                            <div key={i}>\r\n                              {/* {console.log(theComment)} */}\r\n                              <Typography>@{theComment.username}: {theComment.comment}</Typography>\r\n                            </div>\r\n                          )\r\n                        })}\r\n\r\n                      </Grid>\r\n                  </CardContent>\r\n                  </Grid>\r\n                </CardActionArea>\r\n              </Card>\r\n                </div>\r\n              );\r\n            })}\r\n            </Grid>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <Grid item className= {classes.ad}  >\r\n              <Link>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  alt=\"Game Image\"\r\n                  style={{ height: \"400px\", width: \"225px\" }} \r\n                  image={`${process.env.PUBLIC_URL}/Ads/ad1.gif`}\r\n                  title=\"Playstation 6, now available\"\r\n                />\r\n              </Link>\r\n            {/* <a href=\"https://www.tripadvisor.com/Attractions-g293986-Activities-c56-Amman_Amman_Governorate.html\" className=\"navbar-brand float-none\">\r\n                  <img\r\n                    height=\"300px\"\r\n                    width=\"200px\"\r\n                    src={`${process.env.PUBLIC_URL}/Ads/ad1.gif`}\r\n                    alt=\"Gamecity logo\"\r\n                  />\r\n                </a> */}\r\n            <div>\r\n            </div>\r\n      </Grid>\r\n      </Grid>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    games: state.games,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setGames: () => dispatch(setGames()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameList);\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\gamesReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\gameReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\chatReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\profileReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\reducers\\authReducer.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Profilegames.js",["175"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { patch } from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport { likePost, unlikePost, joinPost, unjoinPost, setGames } from \"../../actions/index.js\"\r\n\r\n// import { heart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// import { copyFileSync } from \"fs\";\r\n\r\nfunction Profilegames(props) {\r\n\r\n  const [commentField, setComment] = useState({ comment: \"\", id: \"\", username: window.localStorage.username, joins: 0, likes: 0 });\r\n  const [games, setGames] = useState([]);\r\n  const dispatch = useDispatch();\r\n  console.log(games, \"games for the warning\")\r\n  function handleChangeComment(event) {\r\n    setComment({ ...commentField, comment: event.target.value, id: event.target.name, username: window.localStorage.username });\r\n  }\r\n\r\n\r\n  function handleSubmitComment(event) {\r\n    event.preventDefault();\r\n    async function comment() {\r\n      try {\r\n        await patch(`/api/games/${commentField.id}/comment`, commentField);\r\n        // console.log(commentField.id, \"ID from the edit\")\r\n        props.history.push(`/games/${commentField.id}/comment`);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    comment();\r\n  }\r\n\r\n  useEffect(function () {\r\n    async function getGames() {\r\n      try {\r\n        const response = await axios.get(\"/api/games\");\r\n        setGames(response.data);\r\n      } catch (error) {\r\n        console.log(\"error\", error);\r\n      }\r\n    }\r\n    getGames();\r\n  }, []);\r\n\r\n  // conditional rendering for notifications\r\n\r\n  return (\r\n    <div>\r\n      <hr />\r\n      <h3>{window.localStorage.username}'s posts:</h3>\r\n      <MDBContainer>\r\n        <MDBRow>\r\n        \r\n          <MDBCol md=\"6\" style={{ marginTop: \"20px\" }}>\r\n            {props.games.filteredItems.map((game) => {\r\n                if (game.username === window.localStorage.username) {\r\n              return (\r\n                <div key={game._id}>\r\n                  <h3>@{game.username}</h3>\r\n                  <h4>\r\n                    <Link to={`/games/${game._id}`}>{game.gameName}</Link>\r\n                  </h4>\r\n                  <h6>{game.createdAt}</h6>\r\n                  \r\n                  <MDBContainer>\r\n                    <MDBRow>\r\n                      <MDBCol size=\"4\">\r\n                        <h6 key={game.gameGovernorate}>\r\n                          Jordan/{game.gameGovernorate}\r\n                        </h6>\r\n                        <h6>Game: {game.gameType}</h6>\r\n                      </MDBCol>\r\n                      <MDBCol size=\"4\">\r\n                        <h6>Date: {game.gameDate}</h6>\r\n                        <h6>Duration: {game.gameDuration}</h6>\r\n                      </MDBCol>\r\n                    </MDBRow>\r\n                    <img src={game.selectedFile} width=\"250px\" alt=\"game post\" />\r\n                    <br />\r\n            \r\n                    <button onClick={() => dispatch(unlikePost(game, commentField))}>\r\n                      Unlike\r\n                    </button>\r\n                    <button name={game._id} onClick={() => dispatch(likePost(game, commentField), console.log(game, commentField, \"commentField, like\"))}>\r\n                      Like {game.likeCount.length}\r\n                    </button>\r\n                    <button name={game._id} onClick={() => dispatch(joinPost(game, commentField))}>\r\n                      Join {game.joinCount.length}\r\n                    </button>\r\n                    <button name={game._id} onClick={() => dispatch(unjoinPost(game, commentField))}>\r\n                      Unjoin\r\n                    </button>\r\n                \r\n                    {game.joinCount.map((joined, i) => {\r\n                      return (\r\n                        <div key={i}>\r\n                          <h6>joined: @{joined.username}</h6>\r\n                        </div>\r\n                      )}\r\n                  \r\n                      )}\r\n                \r\n            \r\n                    <br /> <br />\r\n                    <form>\r\n                      <div className=\"form-group\">\r\n                        <input\r\n                          name={game._id}\r\n                          type=\"text\"\r\n                          value={commentField.comment.name}\r\n                          onChange={handleChangeComment}\r\n                          className=\"form-control\"\r\n                          placeholder=\"Type in your comment here...\"\r\n                        />\r\n                        <button onClick={handleSubmitComment}>Comment</button>\r\n                        <br /> <br />\r\n                        {game.comment.map((theComment, i) => {\r\n                          return (\r\n                            <div key={i}>\r\n                              {/* {console.log(theComment)} */}\r\n                              <h6>@{theComment.username}: {theComment.comment}</h6>\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </form>\r\n                  </MDBContainer>\r\n                  <hr />\r\n                </div>\r\n              );\r\n            } else {\r\n                  console.log(\"no notifications for now\")\r\n                }\r\n            })}\r\n          </MDBCol>\r\n         \r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    games: state.games,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setGames: () => dispatch(setGames()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profilegames);\r\n","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\Filter.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\firebase\\index.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Header.js",["176","177"],"import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { AppBar, Collapse, IconButton, Toolbar } from \"@material-ui/core\";\r\nimport SortIcon from '@material-ui/icons/Sort';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link as Scroll } from 'react-scroll';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        fontFamily: \"Century Gothic\"\r\n    },\r\n    appBar: {\r\n        background: \"none\",\r\n        fontFamily: \"Century Gothic\"\r\n    },\r\n    appBarWrapper: {\r\n        width: \"80%\",\r\n        margin: \"0 auto\"\r\n    },\r\n    appBarLogo: {\r\n        // flexGrow: \"1\"\r\n    },\r\n    gamesityTitle: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"2.2rem\",\r\n        // color: \"#325479\"       \r\n    },\r\n    icon: {\r\n        color: \"#fff\",\r\n        fontSize: \"2rem\"\r\n    },\r\n    body: {\r\n        color: \"#fff\",\r\n        fontFamily: \"Century Gothic\",\r\n        fontSize: \"2rem\"\r\n\r\n    },\r\n    body2: {\r\n        color: \"#fff\",\r\n        fontFamily: \"Century Gothic\",\r\n        fontSize: \"1.65rem\"\r\n\r\n    },\r\n    container: {\r\n        textAlign: \"center\"\r\n    },\r\n    expandIcon: {\r\n        color: \"#fff\",\r\n        fontSize: \"2rem\",\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = useState(false);\r\n    useEffect(() => {\r\n        setChecked(true);\r\n    }, [])\r\n    return (\r\n        <div className = {classes.root} id = \"header\">\r\n            <AppBar className = {classes.appBar} elevation = {0}>\r\n                <Toolbar className = {classes.appBarWrapper}>\r\n                    {/* <h4 className = {classes.appBarLogo}>Gamesity</h4> */}\r\n                    <img\r\n                        className = {classes.appBarLogo}\r\n                        height=\"30px\"\r\n                        width=\"30px\"\r\n                        src={`${process.env.PUBLIC_URL}/Logo/GamecityLogo.png`}\r\n                        alt=\"Gamecity logo\"\r\n                        />\r\n                    {/* <IconButton>\r\n                        <SortIcon className = {classes.icon} />\r\n                    </IconButton> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Collapse in = {checked}  \r\n                {...(checked ? { timeout: 1000 } : {})}\r\n                collapsedHeight = {50}\r\n            >\r\n                <div className = {classes.container}>\r\n                    <h3 className = {classes.body} >\r\n                        Welcome to <span className = {classes.gamesityTitle}>Gamesity</span>\r\n                    </h3>\r\n                    <h4 className = {classes.body2}>\r\n                        Now, let's start playing\r\n                    </h4>\r\n                    <Scroll to= \"aboutus-login-cards\" smooth = {true} >\r\n                        <IconButton>\r\n                            <ExpandMoreIcon className = {classes.expandIcon}/>\r\n                        </IconButton>\r\n                    </Scroll>\r\n                </div>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\n// function Navigation() {\r\n//     var value = false;\r\n//     if (window.localStorage.length > 0) {\r\n//       value = true;\r\n//     } else {\r\n//       value = false;\r\n//     }\r\n  \r\n//     return (\r\n//       <div>\r\n//         {value === false ? (\r\n//           <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n//             <div className=\"container\">\r\n//               <ul className=\"nav justify-content-start \">\r\n//                 <li className=\"nav-item\">\r\n//                   <a href=\"/\" className=\"navbar-brand\">\r\n//                     <img\r\n//                       height=\"30px\"\r\n//                       width=\"30px\"\r\n//                       src={`${process.env.PUBLIC_URL}/Logo/GamecityLogo.png`}\r\n//                       alt=\"Gamecity logo\"\r\n//                     />\r\n//                   </a>\r\n//                 </li>\r\n//               </ul>\r\n//             </div>\r\n//           </nav>\r\n//         ) : (\r\n//           <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n//             <div className=\"container\">\r\n//               <ul className=\"nav justify-content-start \">\r\n//                 <li className=\"nav-item\">\r\n//                   <NavLink\r\n//                     exact\r\n//                     className=\"nav-link\"\r\n//                     activeClassName=\"active\"\r\n//                     to=\"/\"\r\n//                     style={{ color: \"white\" }}\r\n//                   >\r\n//                     <img\r\n//                       height=\"30px\"\r\n//                       width=\"30px\"\r\n//                       src={`${process.env.PUBLIC_URL}/Logo/GamecityLogo.png`}\r\n//                       alt=\"Gamecity logo\"\r\n//                     />\r\n//                   </NavLink>\r\n//                 </li>\r\n//               </ul>\r\n//               <ul className=\"nav justify-content-start\">\r\n//                 <li className=\"nav-item\">\r\n//                   <SearchForm />\r\n//                 </li>\r\n//               </ul>\r\n//               <ul className=\"nav justify-content-end \">\r\n//                 <li className=\"nav-item\">\r\n//                   <NavLink\r\n//                     exact\r\n//                     className=\"nav-link\"\r\n//                     activeClassName=\"active\"\r\n//                     to=\"/games\"\r\n//                     style={{ color: \"white\" }}\r\n//                   >\r\n//                     Games\r\n//                   </NavLink>\r\n//                 </li>\r\n//                 {/* <li className=\"nav-item\">\r\n//                   <NavLink\r\n//                     exact\r\n//                     className=\"nav-link\"\r\n//                     activeClassName=\"active\"\r\n//                     to=\"/notifications\"\r\n//                     style={{ color: \"white\" }}\r\n//                   >\r\n//                     Notifications\r\n//                   </NavLink>\r\n//                 </li> */}\r\n//                 <li className=\"nav-item\">\r\n//                   <NavLink\r\n//                     exact\r\n//                     className=\"nav-link\"\r\n//                     activeClassName=\"active\"\r\n//                     to=\"/chat\"\r\n//                     style={{ color: \"white\" }}\r\n//                   >\r\n//                     Chat Rooms\r\n//                   </NavLink>\r\n//                 </li>\r\n//                 <li className=\"nav-item\">\r\n//                   <NavLink\r\n//                     exact\r\n//                     className=\"nav-link\"\r\n//                     activeClassName=\"active\"\r\n//                     to={\"/profile/\" + useremail}\r\n//                     style={{ color: \"white\" }}\r\n//                   >\r\n//                     Profile\r\n//                   </NavLink>\r\n//                 </li>\r\n//                 <li>\r\n//                   <NavLink\r\n//                     exact\r\n//                     className=\"nav-link\"\r\n//                     activeClassName=\"active\"\r\n//                     to=\"/land\"\r\n//                     style={{ color: \"white\" }}\r\n//                     onClick={() => logout()}\r\n//                   >\r\n//                     Logout\r\n//                   </NavLink>\r\n//                 </li>\r\n//               </ul>\r\n//             </div>\r\n//           </nav>\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\Cards.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\AboutUsCard.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\hook\\useWindowPosition.js",[],"C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\games\\GameRendered.js",["178"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 600,\r\n    height: 300\r\n  },\r\n});\r\n\r\nexport default function GameRendered() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Lizard\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n            across all continents except Antarctica\r\n            <hr />\r\n            Comments section goes here\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}","C:\\Users\\USER\\Desktop\\THESIS_FINAL\\Gamecity\\client\\src\\components\\pages\\register2.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":7,"column":3,"nodeType":"185","messageId":"186","endLine":7,"endColumn":10},{"ruleId":"183","severity":1,"message":"187","line":12,"column":49,"nodeType":"185","messageId":"186","endLine":12,"endColumn":53},{"ruleId":"183","severity":1,"message":"188","line":13,"column":8,"nodeType":"185","messageId":"186","endLine":13,"endColumn":16},{"ruleId":"183","severity":1,"message":"189","line":38,"column":8,"nodeType":"185","messageId":"186","endLine":38,"endColumn":12},{"ruleId":"183","severity":1,"message":"190","line":117,"column":9,"nodeType":"185","messageId":"186","endLine":117,"endColumn":16},{"ruleId":"183","severity":1,"message":"191","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"192","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":24},{"ruleId":"183","severity":1,"message":"193","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"183","severity":1,"message":"194","line":8,"column":8,"nodeType":"185","messageId":"186","endLine":8,"endColumn":12},{"ruleId":"183","severity":1,"message":"195","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":11},{"ruleId":"183","severity":1,"message":"196","line":12,"column":8,"nodeType":"185","messageId":"186","endLine":12,"endColumn":18},{"ruleId":"183","severity":1,"message":"197","line":14,"column":8,"nodeType":"185","messageId":"186","endLine":14,"endColumn":16},{"ruleId":"183","severity":1,"message":"198","line":7,"column":10,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"183","severity":1,"message":"199","line":7,"column":18,"nodeType":"185","messageId":"186","endLine":7,"endColumn":24},{"ruleId":"183","severity":1,"message":"200","line":8,"column":8,"nodeType":"185","messageId":"186","endLine":8,"endColumn":12},{"ruleId":"183","severity":1,"message":"193","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"195","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":11},{"ruleId":"201","severity":1,"message":"202","line":160,"column":15,"nodeType":"203","endLine":160,"endColumn":30},{"ruleId":"201","severity":1,"message":"202","line":174,"column":15,"nodeType":"203","endLine":174,"endColumn":30},{"ruleId":"201","severity":1,"message":"202","line":188,"column":15,"nodeType":"203","endLine":188,"endColumn":30},{"ruleId":"201","severity":1,"message":"202","line":206,"column":15,"nodeType":"203","endLine":206,"endColumn":30},{"ruleId":"201","severity":1,"message":"202","line":219,"column":15,"nodeType":"203","endLine":219,"endColumn":30},{"ruleId":"201","severity":1,"message":"202","line":232,"column":15,"nodeType":"203","endLine":232,"endColumn":30},{"ruleId":"183","severity":1,"message":"193","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":16},{"ruleId":"183","severity":1,"message":"195","line":11,"column":8,"nodeType":"185","messageId":"186","endLine":11,"endColumn":11},{"ruleId":"201","severity":1,"message":"202","line":145,"column":15,"nodeType":"203","endLine":145,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":204,"column":15,"nodeType":"203","endLine":204,"endColumn":23},{"ruleId":"201","severity":1,"message":"202","line":216,"column":15,"nodeType":"203","endLine":216,"endColumn":23},{"ruleId":"183","severity":1,"message":"204","line":7,"column":10,"nodeType":"185","messageId":"186","endLine":7,"endColumn":22},{"ruleId":"183","severity":1,"message":"198","line":7,"column":24,"nodeType":"185","messageId":"186","endLine":7,"endColumn":30},{"ruleId":"183","severity":1,"message":"199","line":7,"column":32,"nodeType":"185","messageId":"186","endLine":7,"endColumn":38},{"ruleId":"183","severity":1,"message":"205","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":20},{"ruleId":"183","severity":1,"message":"206","line":13,"column":8,"nodeType":"185","messageId":"186","endLine":13,"endColumn":19},{"ruleId":"183","severity":1,"message":"207","line":94,"column":7,"nodeType":"185","messageId":"186","endLine":94,"endColumn":16},{"ruleId":"183","severity":1,"message":"208","line":99,"column":5,"nodeType":"185","messageId":"186","endLine":99,"endColumn":10},{"ruleId":"209","severity":1,"message":"210","line":115,"column":53,"nodeType":"211","messageId":"212","endLine":115,"endColumn":55},{"ruleId":"201","severity":1,"message":"202","line":208,"column":27,"nodeType":"203","endLine":208,"endColumn":51},{"ruleId":"209","severity":1,"message":"210","line":60,"column":51,"nodeType":"211","messageId":"212","endLine":60,"endColumn":53},{"ruleId":"183","severity":1,"message":"213","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":17},{"ruleId":"183","severity":1,"message":"188","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":16},{"ruleId":"183","severity":1,"message":"206","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":19},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'SortIcon' is defined but never used.","'Land' is defined but never used.","'classes' is assigned a value but never used.","'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'EditIcon' is defined but never used.","'MDBRow' is defined but never used.","'MDBCol' is defined but never used.","'Chat' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MDBContainer' is defined but never used.","'GameRendered' is defined but never used.","'CardActions' is defined but never used.","'useremail' is assigned a value but never used.","'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'CardMedia' is defined but never used.","no-global-assign","no-unsafe-negation"]